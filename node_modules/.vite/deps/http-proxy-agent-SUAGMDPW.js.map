{
  "version": 3,
  "sources": ["../../ccxt/js/src/static_dependencies/proxies/http-proxy-agent/index.js"],
  "sourcesContent": ["// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\nimport * as net from 'net';\nimport * as tls from 'tls';\n// import createDebug from 'debug';\nimport { once } from 'events';\nimport { Agent } from './../agent-base/index.js';\nfunction isHTTPS(protocol) {\n    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects\n * to the specified \"HTTP proxy server\" in order to proxy HTTP requests.\n */\nexport class HttpProxyAgent extends Agent {\n    constructor(proxy, opts) {\n        super(opts);\n        this.proxy = typeof proxy === 'string' ? new URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        // debug('Creating new HttpProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port\n            ? parseInt(this.proxy.port, 10)\n            : this.secureProxy\n                ? 443\n                : 80;\n        this.connectOpts = {\n            ...(opts ? omit(opts, 'headers') : null),\n            host,\n            port,\n        };\n    }\n    get secureProxy() {\n        return isHTTPS(this.proxy.protocol);\n    }\n    async connect(req, opts) {\n        const { proxy } = this;\n        const protocol = opts.secureEndpoint ? 'https:' : 'http:';\n        const hostname = req.getHeader('host') || 'localhost';\n        const base = `${protocol}//${hostname}`;\n        const url = new URL(req.path, base);\n        if (opts.port !== 80) {\n            url.port = String(opts.port);\n        }\n        // Change the `http.ClientRequest` instance's \"path\" field\n        // to the absolute path of the URL that will be requested.\n        req.path = String(url);\n        // Inject the `Proxy-Authorization` header if necessary.\n        req._header = null;\n        const headers = typeof this.proxyHeaders === 'function'\n            ? this.proxyHeaders()\n            : { ...this.proxyHeaders };\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n        }\n        if (!headers['Proxy-Connection']) {\n            headers['Proxy-Connection'] = this.keepAlive\n                ? 'Keep-Alive'\n                : 'close';\n        }\n        for (const name of Object.keys(headers)) {\n            const value = headers[name];\n            if (value) {\n                req.setHeader(name, value);\n            }\n        }\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (this.secureProxy) {\n            // debug('Creating `tls.Socket`: %o', this.connectOpts);\n            socket = tls.connect(this.connectOpts);\n        }\n        else {\n            // debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = net.connect(this.connectOpts);\n        }\n        // At this point, the http ClientRequest's internal `_header` field\n        // might have already been set. If this is the case then we'll need\n        // to re-generate the string since we just changed the `req.path`.\n        let first;\n        let endOfHeaders;\n        // debug('Regenerating stored HTTP header string for request');\n        req._implicitHeader();\n        if (req.outputData && req.outputData.length > 0) {\n            // Node >= 12\n            // debug(\n            //\t'Patching connection write() output buffer with updated header'\n            // );\n            first = req.outputData[0].data;\n            endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n            req.outputData[0].data =\n                req._header + first.substring(endOfHeaders);\n            // debug('Output buffer: %o', req.outputData[0].data);\n        }\n        // Wait for the socket's `connect` event, so that this `callback()`\n        // function throws instead of the `http` request machinery. This is\n        // important for i.e. `PacProxyAgent` which determines a failed proxy\n        // connection via the `callback()` function throwing.\n        await once(socket, 'connect');\n        return socket;\n    }\n}\nHttpProxyAgent.protocols = ['http', 'https'];\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAMA,UAAqB;AACrB,UAAqB;AAErB,oBAAqB;AAErB,SAAS,QAAQ,UAAU;AACvB,SAAO,OAAO,aAAa,WAAW,aAAa,KAAK,QAAQ,IAAI;AACxE;AAKO,IAAM,iBAAN,cAA6B,MAAM;AAAA,EACtC,YAAY,OAAO,MAAM;AACrB,UAAM,IAAI;AACV,SAAK,QAAQ,OAAO,UAAU,WAAW,IAAI,IAAI,KAAK,IAAI;AAC1D,SAAK,gBAAe,6BAAM,YAAW,CAAC;AAGtC,UAAM,QAAQ,KAAK,MAAM,YAAY,KAAK,MAAM,MAAM,QAAQ,YAAY,EAAE;AAC5E,UAAM,OAAO,KAAK,MAAM,OAClB,SAAS,KAAK,MAAM,MAAM,EAAE,IAC5B,KAAK,cACD,MACA;AACV,SAAK,cAAc;AAAA,MACf,GAAI,OAAO,KAAK,MAAM,SAAS,IAAI;AAAA,MACnC;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,cAAc;AACd,WAAO,QAAQ,KAAK,MAAM,QAAQ;AAAA,EACtC;AAAA,EACA,MAAM,QAAQ,KAAK,MAAM;AACrB,UAAM,EAAE,MAAM,IAAI;AAClB,UAAM,WAAW,KAAK,iBAAiB,WAAW;AAClD,UAAM,WAAW,IAAI,UAAU,MAAM,KAAK;AAC1C,UAAM,OAAO,GAAG,QAAQ,KAAK,QAAQ;AACrC,UAAM,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI;AAClC,QAAI,KAAK,SAAS,IAAI;AAClB,UAAI,OAAO,OAAO,KAAK,IAAI;AAAA,IAC/B;AAGA,QAAI,OAAO,OAAO,GAAG;AAErB,QAAI,UAAU;AACd,UAAM,UAAU,OAAO,KAAK,iBAAiB,aACvC,KAAK,aAAa,IAClB,EAAE,GAAG,KAAK,aAAa;AAC7B,QAAI,MAAM,YAAY,MAAM,UAAU;AAClC,YAAM,OAAO,GAAG,mBAAmB,MAAM,QAAQ,CAAC,IAAI,mBAAmB,MAAM,QAAQ,CAAC;AACxF,cAAQ,qBAAqB,IAAI,SAAS,OAAO,KAAK,IAAI,EAAE,SAAS,QAAQ,CAAC;AAAA,IAClF;AACA,QAAI,CAAC,QAAQ,kBAAkB,GAAG;AAC9B,cAAQ,kBAAkB,IAAI,KAAK,YAC7B,eACA;AAAA,IACV;AACA,eAAW,QAAQ,OAAO,KAAK,OAAO,GAAG;AACrC,YAAM,QAAQ,QAAQ,IAAI;AAC1B,UAAI,OAAO;AACP,YAAI,UAAU,MAAM,KAAK;AAAA,MAC7B;AAAA,IACJ;AAEA,QAAI;AACJ,QAAI,KAAK,aAAa;AAElB,eAAa,YAAQ,KAAK,WAAW;AAAA,IACzC,OACK;AAED,eAAa,YAAQ,KAAK,WAAW;AAAA,IACzC;AAIA,QAAI;AACJ,QAAI;AAEJ,QAAI,gBAAgB;AACpB,QAAI,IAAI,cAAc,IAAI,WAAW,SAAS,GAAG;AAK7C,cAAQ,IAAI,WAAW,CAAC,EAAE;AAC1B,qBAAe,MAAM,QAAQ,UAAU,IAAI;AAC3C,UAAI,WAAW,CAAC,EAAE,OACd,IAAI,UAAU,MAAM,UAAU,YAAY;AAAA,IAElD;AAKA,cAAM,oBAAK,QAAQ,SAAS;AAC5B,WAAO;AAAA,EACX;AACJ;AACA,eAAe,YAAY,CAAC,QAAQ,OAAO;AAC3C,SAAS,KAAK,QAAQ,MAAM;AACxB,QAAM,MAAM,CAAC;AACb,MAAI;AACJ,OAAK,OAAO,KAAK;AACb,QAAI,CAAC,KAAK,SAAS,GAAG,GAAG;AACrB,UAAI,GAAG,IAAI,IAAI,GAAG;AAAA,IACtB;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": []
}
