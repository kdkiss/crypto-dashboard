{
  "version": 3,
  "sources": ["browser-external:node:zlib", "browser-external:node:stream", "browser-external:node:buffer", "browser-external:node:util", "browser-external:node:url", "browser-external:node:net", "../../ccxt/js/src/static_dependencies/node-fetch/index.js", "../../ccxt/js/src/static_dependencies/node-fetch/body.js", "../../ccxt/js/src/static_dependencies/node-fetch/errors/base.js", "../../ccxt/js/src/static_dependencies/node-fetch/errors/fetch-error.js", "../../ccxt/js/src/static_dependencies/node-fetch/utils/is.js", "../../ccxt/js/src/static_dependencies/node-fetch/headers.js", "../../ccxt/js/src/static_dependencies/node-fetch/utils/is-redirect.js", "../../ccxt/js/src/static_dependencies/node-fetch/response.js", "../../ccxt/js/src/static_dependencies/node-fetch/request.js", "../../ccxt/js/src/static_dependencies/node-fetch/utils/get-search.js", "../../ccxt/js/src/static_dependencies/node-fetch/utils/referrer.js", "../../ccxt/js/src/static_dependencies/node-fetch/errors/abort-error.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:zlib\" has been externalized for browser compatibility. Cannot access \"node:zlib.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:stream\" has been externalized for browser compatibility. Cannot access \"node:stream.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:buffer\" has been externalized for browser compatibility. Cannot access \"node:buffer.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:util\" has been externalized for browser compatibility. Cannot access \"node:util.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:url\" has been externalized for browser compatibility. Cannot access \"node:url.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:net\" has been externalized for browser compatibility. Cannot access \"node:net.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, { PassThrough, pipeline as pump } from 'node:stream';\nimport { Buffer } from 'node:buffer';\n// import dataUriToBuffer from 'data-uri-to-buffer';\nimport { writeToStream, clone } from './body.js';\nimport Response from './response.js';\nimport Headers, { fromRawHeaders } from './headers.js';\nimport Request, { getNodeRequestOptions } from './request.js';\nimport { FetchError } from './errors/fetch-error.js';\nimport { AbortError } from './errors/abort-error.js';\nimport { isRedirect } from './utils/is-redirect.js';\n// import {FormData} from 'formdata-polyfill/esm.min.js';\nimport { isDomainOrSubdomain, isSameProtocol } from './utils/is.js';\nimport { parseReferrerPolicyFromHeader } from './utils/referrer.js';\n/* import {\n    Blob,\n    File,\n    fileFromSync,\n    fileFrom,\n    blobFromSync,\n    blobFrom\n} from 'fetch-blob/from.js';*/\n// export {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\n// export {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\nexport { Headers, Request, Response, FetchError, AbortError, isRedirect };\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n    return new Promise((resolve, reject) => {\n        // Build request object\n        const request = new Request(url, options_);\n        const { parsedURL, options } = getNodeRequestOptions(request);\n        if (!supportedSchemas.has(parsedURL.protocol)) {\n            throw new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n        }\n        /*if (parsedURL.protocol === 'data:') {\n            const data = dataUriToBuffer(request.url);\n            const response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n            resolve(response);\n            return;\n        }*/\n        // Wrap http.request into fetch\n        const send = (parsedURL.protocol === 'https:' ? https : http).request;\n        const { signal } = request;\n        let response = null;\n        const abort = () => {\n            const error = new AbortError('The operation was aborted.');\n            reject(error);\n            if (request.body && request.body instanceof Stream.Readable) {\n                request.body.destroy(error);\n            }\n            if (!response || !response.body) {\n                return;\n            }\n            response.body.emit('error', error);\n        };\n        if (signal && signal.aborted) {\n            abort();\n            return;\n        }\n        const abortAndFinalize = () => {\n            abort();\n            finalize();\n        };\n        // Send request\n        const request_ = send(parsedURL.toString(), options);\n        if (signal) {\n            signal.addEventListener('abort', abortAndFinalize);\n        }\n        const finalize = () => {\n            request_.abort();\n            if (signal) {\n                signal.removeEventListener('abort', abortAndFinalize);\n            }\n        };\n        request_.on('error', error => {\n            reject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n            finalize();\n        });\n        fixResponseChunkedTransferBadEnding(request_, error => {\n            if (response && response.body) {\n                response.body.destroy(error);\n            }\n        });\n        /* c8 ignore next 18 */\n        if (process.version < 'v14') {\n            // Before Node.js 14, pipeline() does not fully support async iterators and does not always\n            // properly handle when the socket close/end events are out of order.\n            request_.on('socket', s => {\n                let endedWithEventsCount;\n                s.prependListener('end', () => {\n                    endedWithEventsCount = s._eventsCount;\n                });\n                s.prependListener('close', hadError => {\n                    // if end happened before close but the socket didn't emit an error, do it now\n                    if (response && endedWithEventsCount < s._eventsCount && !hadError) {\n                        const error = new Error('Premature close');\n                        error.code = 'ERR_STREAM_PREMATURE_CLOSE';\n                        response.body.emit('error', error);\n                    }\n                });\n            });\n        }\n        request_.on('response', response_ => {\n            request_.setTimeout(0);\n            const headers = fromRawHeaders(response_.rawHeaders);\n            // HTTP fetch step 5\n            if (isRedirect(response_.statusCode)) {\n                // HTTP fetch step 5.2\n                const location = headers.get('Location');\n                // HTTP fetch step 5.3\n                let locationURL = null;\n                try {\n                    locationURL = location === null ? null : new URL(location, request.url);\n                }\n                catch {\n                    // error here can only be invalid URL in Location: header\n                    // do not throw when options.redirect == manual\n                    // let the user extract the errorneous redirect URL\n                    if (request.redirect !== 'manual') {\n                        reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n                        finalize();\n                        return;\n                    }\n                }\n                // HTTP fetch step 5.5\n                switch (request.redirect) {\n                    case 'error':\n                        reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n                        finalize();\n                        return;\n                    case 'manual':\n                        // Nothing to do\n                        break;\n                    case 'follow': {\n                        // HTTP-redirect fetch step 2\n                        if (locationURL === null) {\n                            break;\n                        }\n                        // HTTP-redirect fetch step 5\n                        if (request.counter >= request.follow) {\n                            reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n                            finalize();\n                            return;\n                        }\n                        // HTTP-redirect fetch step 6 (counter increment)\n                        // Create a new Request object.\n                        const requestOptions = {\n                            headers: new Headers(request.headers),\n                            follow: request.follow,\n                            counter: request.counter + 1,\n                            agent: request.agent,\n                            compress: request.compress,\n                            method: request.method,\n                            body: clone(request),\n                            signal: request.signal,\n                            size: request.size,\n                            referrer: request.referrer,\n                            referrerPolicy: request.referrerPolicy\n                        };\n                        // when forwarding sensitive headers like \"Authorization\",\n                        // \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n                        // headers will be ignored when following a redirect to a domain\n                        // that is not a subdomain match or exact match of the initial domain.\n                        // For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n                        // will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n                        // headers will also be ignored when following a redirect to a domain using\n                        // a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n                        // will not forward the sensitive headers\n                        if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n                            for (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n                                requestOptions.headers.delete(name);\n                            }\n                        }\n                        // HTTP-redirect fetch step 9\n                        if (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n                            reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n                            finalize();\n                            return;\n                        }\n                        // HTTP-redirect fetch step 11\n                        if (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n                            requestOptions.method = 'GET';\n                            requestOptions.body = undefined;\n                            requestOptions.headers.delete('content-length');\n                        }\n                        // HTTP-redirect fetch step 14\n                        const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n                        if (responseReferrerPolicy) {\n                            requestOptions.referrerPolicy = responseReferrerPolicy;\n                        }\n                        // HTTP-redirect fetch step 15\n                        resolve(fetch(new Request(locationURL, requestOptions)));\n                        finalize();\n                        return;\n                    }\n                    default:\n                        return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n                }\n            }\n            // Prepare response\n            if (signal) {\n                response_.once('end', () => {\n                    signal.removeEventListener('abort', abortAndFinalize);\n                });\n            }\n            let body = pump(response_, new PassThrough(), error => {\n                if (error) {\n                    reject(error);\n                }\n            });\n            // see https://github.com/nodejs/node/pull/29376\n            /* c8 ignore next 3 */\n            if (process.version < 'v12.10') {\n                response_.on('aborted', abortAndFinalize);\n            }\n            const responseOptions = {\n                url: request.url,\n                status: response_.statusCode,\n                statusText: response_.statusMessage,\n                headers,\n                size: request.size,\n                counter: request.counter,\n                highWaterMark: request.highWaterMark\n            };\n            // HTTP-network fetch step 12.1.1.3\n            const codings = headers.get('Content-Encoding');\n            // HTTP-network fetch step 12.1.1.4: handle content codings\n            // in following scenarios we ignore compression support\n            // 1. compression support is disabled\n            // 2. HEAD request\n            // 3. no Content-Encoding header\n            // 4. no content response (204)\n            // 5. content not modified response (304)\n            if (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n                response = new Response(body, responseOptions);\n                resolve(response);\n                return;\n            }\n            // For Node v6+\n            // Be less strict when decoding compressed responses, since sometimes\n            // servers send slightly invalid responses that are still accepted\n            // by common browsers.\n            // Always using Z_SYNC_FLUSH is what cURL does.\n            const zlibOptions = {\n                flush: zlib.Z_SYNC_FLUSH,\n                finishFlush: zlib.Z_SYNC_FLUSH\n            };\n            // For gzip\n            if (codings === 'gzip' || codings === 'x-gzip') {\n                body = pump(body, zlib.createGunzip(zlibOptions), error => {\n                    if (error) {\n                        reject(error);\n                    }\n                });\n                response = new Response(body, responseOptions);\n                resolve(response);\n                return;\n            }\n            // For deflate\n            if (codings === 'deflate' || codings === 'x-deflate') {\n                // Handle the infamous raw deflate response from old servers\n                // a hack for old IIS and Apache servers\n                const raw = pump(response_, new PassThrough(), error => {\n                    if (error) {\n                        reject(error);\n                    }\n                });\n                raw.once('data', chunk => {\n                    // See http://stackoverflow.com/questions/37519828\n                    if ((chunk[0] & 0x0F) === 0x08) {\n                        body = pump(body, zlib.createInflate(), error => {\n                            if (error) {\n                                reject(error);\n                            }\n                        });\n                    }\n                    else {\n                        body = pump(body, zlib.createInflateRaw(), error => {\n                            if (error) {\n                                reject(error);\n                            }\n                        });\n                    }\n                    response = new Response(body, responseOptions);\n                    resolve(response);\n                });\n                raw.once('end', () => {\n                    // Some old IIS servers return zero-length OK deflate responses, so\n                    // 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n                    if (!response) {\n                        response = new Response(body, responseOptions);\n                        resolve(response);\n                    }\n                });\n                return;\n            }\n            // For br\n            if (codings === 'br') {\n                body = pump(body, zlib.createBrotliDecompress(), error => {\n                    if (error) {\n                        reject(error);\n                    }\n                });\n                response = new Response(body, responseOptions);\n                resolve(response);\n                return;\n            }\n            // Otherwise, use response as-is\n            response = new Response(body, responseOptions);\n            resolve(response);\n        });\n        // eslint-disable-next-line promise/prefer-await-to-then\n        writeToStream(request_, request).catch(reject);\n    });\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n    const LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n    let isChunkedTransfer = false;\n    let properLastChunkReceived = false;\n    let previousChunk;\n    request.on('response', response => {\n        const { headers } = response;\n        isChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n    });\n    request.on('socket', socket => {\n        const onSocketClose = () => {\n            if (isChunkedTransfer && !properLastChunkReceived) {\n                const error = new Error('Premature close');\n                error.code = 'ERR_STREAM_PREMATURE_CLOSE';\n                errorCallback(error);\n            }\n        };\n        const onData = buf => {\n            properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n            // Sometimes final 0-length chunk and end of message code are in separate packets\n            if (!properLastChunkReceived && previousChunk) {\n                properLastChunkReceived = (Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n                    Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0);\n            }\n            previousChunk = buf;\n        };\n        socket.prependListener('close', onSocketClose);\n        socket.on('data', onData);\n        request.on('close', () => {\n            socket.removeListener('close', onSocketClose);\n            socket.removeListener('data', onData);\n        });\n    });\n}\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\nimport Stream, { PassThrough } from 'node:stream';\nimport { types, deprecate, promisify } from 'node:util';\nimport { Buffer } from 'node:buffer';\n// import Blob from 'fetch-blob';\n// import {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\nimport { FetchError } from './errors/fetch-error.js';\nimport { FetchBaseError } from './errors/base.js';\nimport { isBlob, isURLSearchParameters } from './utils/is.js';\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n    constructor(body, { size = 0 } = {}) {\n        let boundary = null;\n        if (body === null) {\n            // Body is undefined or null\n            body = null;\n        }\n        else if (isURLSearchParameters(body)) {\n            // Body is a URLSearchParams\n            body = Buffer.from(body.toString());\n        }\n        else if (isBlob(body)) {\n            // Body is blob\n        }\n        else if (Buffer.isBuffer(body)) {\n            // Body is Buffer\n        }\n        else if (types.isAnyArrayBuffer(body)) {\n            // Body is ArrayBuffer\n            body = Buffer.from(body);\n        }\n        else if (ArrayBuffer.isView(body)) {\n            // Body is ArrayBufferView\n            body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n        }\n        else if (body instanceof Stream) {\n            // Body is stream\n        } /* else if (body instanceof FormData) {\n            Body is FormData\n            body = formDataToBlob(body);\n            boundary = body.type.split('=')[1];\n        } */\n        else {\n            // None of the above\n            // coerce to string then buffer\n            body = Buffer.from(String(body));\n        }\n        let stream = body;\n        if (Buffer.isBuffer(body)) {\n            stream = Stream.Readable.from(body);\n        }\n        else if (isBlob(body)) {\n            stream = Stream.Readable.from(body.stream());\n        }\n        this[INTERNALS] = {\n            body,\n            stream,\n            boundary,\n            disturbed: false,\n            error: null\n        };\n        this.size = size;\n        if (body instanceof Stream) {\n            body.on('error', error_ => {\n                const error = error_ instanceof FetchBaseError ?\n                    error_ :\n                    new FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n                this[INTERNALS].error = error;\n            });\n        }\n    }\n    get body() {\n        return this[INTERNALS].stream;\n    }\n    get bodyUsed() {\n        return this[INTERNALS].disturbed;\n    }\n    /**\n     * Decode response as ArrayBuffer\n     *\n     * @return  Promise\n     */\n    async arrayBuffer() {\n        const { buffer, byteOffset, byteLength } = await consumeBody(this);\n        return buffer.slice(byteOffset, byteOffset + byteLength);\n    }\n    /*async formData() {\n        const ct = this.headers.get('content-type');\n\n        if (ct.startsWith('application/x-www-form-urlencoded')) {\n            const formData = new FormData();\n            const parameters = new URLSearchParams(await this.text());\n\n            for (const [name, value] of parameters) {\n                formData.append(name, value);\n            }\n\n            return formData;\n        }\n\n        const {toFormData} = await import('./utils/multipart-parser.js');\n        return toFormData(this.body, ct);\n    }*/\n    /**\n     * Return raw response as Blob\n     *\n     * @return Promise\n     */\n    async blob() {\n        const ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n        const buf = await this.arrayBuffer();\n        return new Blob([buf], {\n            type: ct\n        });\n    }\n    /**\n     * Decode response as json\n     *\n     * @return  Promise\n     */\n    async json() {\n        const text = await this.text();\n        return JSON.parse(text);\n    }\n    /**\n     * Decode response as text\n     *\n     * @return  Promise\n     */\n    async text() {\n        const buffer = await consumeBody(this);\n        return new TextDecoder().decode(buffer);\n    }\n    /**\n     * Decode response as buffer (non-spec api)\n     *\n     * @return  Promise\n     */\n    buffer() {\n        return consumeBody(this);\n    }\n}\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n    body: { enumerable: true },\n    bodyUsed: { enumerable: true },\n    arrayBuffer: { enumerable: true },\n    blob: { enumerable: true },\n    json: { enumerable: true },\n    text: { enumerable: true },\n    data: { get: deprecate(() => { }, 'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead', 'https://github.com/node-fetch/node-fetch/issues/1000 (response)') }\n});\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n    if (data[INTERNALS].disturbed) {\n        throw new TypeError(`body used already for: ${data.url}`);\n    }\n    data[INTERNALS].disturbed = true;\n    if (data[INTERNALS].error) {\n        throw data[INTERNALS].error;\n    }\n    const { body } = data;\n    // Body is null\n    if (body === null) {\n        return Buffer.alloc(0);\n    }\n    /* c8 ignore next 3 */\n    if (!(body instanceof Stream)) {\n        return Buffer.alloc(0);\n    }\n    // Body is stream\n    // get ready to actually consume the body\n    const accum = [];\n    let accumBytes = 0;\n    try {\n        for await (const chunk of body) {\n            if (data.size > 0 && accumBytes + chunk.length > data.size) {\n                const error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n                body.destroy(error);\n                throw error;\n            }\n            accumBytes += chunk.length;\n            accum.push(chunk);\n        }\n    }\n    catch (error) {\n        const error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n        throw error_;\n    }\n    if (body.readableEnded === true || body._readableState.ended === true) {\n        try {\n            if (accum.every(c => typeof c === 'string')) {\n                return Buffer.from(accum.join(''));\n            }\n            return Buffer.concat(accum, accumBytes);\n        }\n        catch (error) {\n            throw new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n        }\n    }\n    else {\n        throw new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n    }\n}\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n    let p1;\n    let p2;\n    let { body } = instance[INTERNALS];\n    // Don't allow cloning a used body\n    if (instance.bodyUsed) {\n        throw new Error('cannot clone body after it is used');\n    }\n    // Check that body is a stream and not form-data object\n    // note: we can't clone the form-data object without having it as a dependency\n    if ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n        // Tee instance body\n        p1 = new PassThrough({ highWaterMark });\n        p2 = new PassThrough({ highWaterMark });\n        body.pipe(p1);\n        body.pipe(p2);\n        // Set instance body to teed body and return the other teed body\n        instance[INTERNALS].stream = p1;\n        body = p2;\n    }\n    return body;\n};\nconst getNonSpecFormDataBoundary = deprecate(body => body.getBoundary(), 'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package', 'https://github.com/node-fetch/node-fetch/issues/1167');\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n    // Body is null or undefined\n    if (body === null) {\n        return null;\n    }\n    // Body is string\n    if (typeof body === 'string') {\n        return 'text/plain;charset=UTF-8';\n    }\n    // Body is a URLSearchParams\n    if (isURLSearchParameters(body)) {\n        return 'application/x-www-form-urlencoded;charset=UTF-8';\n    }\n    // Body is blob\n    if (isBlob(body)) {\n        return body.type || null;\n    }\n    // Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n    if (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n        return null;\n    }\n    // if (body instanceof FormData) {\n    // \treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n    // }\n    // Detect form data input from form-data module\n    if (body && typeof body.getBoundary === 'function') {\n        return `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n    }\n    // Body is stream - can't really do much about this\n    if (body instanceof Stream) {\n        return null;\n    }\n    // Body constructor defaults other things to string\n    return 'text/plain;charset=UTF-8';\n};\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n    const { body } = request[INTERNALS];\n    // Body is null or undefined\n    if (body === null) {\n        return 0;\n    }\n    // Body is Blob\n    if (isBlob(body)) {\n        return body.size;\n    }\n    // Body is Buffer\n    if (Buffer.isBuffer(body)) {\n        return body.length;\n    }\n    // Detect form data input from form-data module\n    if (body && typeof body.getLengthSync === 'function') {\n        return body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n    }\n    // Body is stream\n    return null;\n};\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, { body }) => {\n    if (body === null) {\n        // Body is null\n        dest.end();\n    }\n    else {\n        // Body is stream\n        await pipeline(body, dest);\n    }\n};\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\nexport class FetchBaseError extends Error {\n    constructor(message, type) {\n        super(message);\n        // Hide custom error implementation details from end-users\n        Error.captureStackTrace(this, this.constructor);\n        this.type = type;\n    }\n    get name() {\n        return this.constructor.name;\n    }\n    get [Symbol.toStringTag]() {\n        return this.constructor.name;\n    }\n}\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\nimport { FetchBaseError } from './base.js';\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n    /**\n     * @param  {string} message -      Error message for human\n     * @param  {string} [type] -        Error type for machine\n     * @param  {SystemError} [systemError] - For Node.js system error\n     */\n    constructor(message, type, systemError) {\n        super(message, type);\n        // When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n        if (systemError) {\n            // eslint-disable-next-line no-multi-assign\n            this.code = this.errno = systemError.code;\n            this.erroredSysCall = systemError.syscall;\n        }\n    }\n}\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\n/**\n * Is.js\n *\n * Object type checks.\n */\nconst NAME = Symbol.toStringTag;\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n    return (typeof object === 'object' &&\n        typeof object.append === 'function' &&\n        typeof object.delete === 'function' &&\n        typeof object.get === 'function' &&\n        typeof object.getAll === 'function' &&\n        typeof object.has === 'function' &&\n        typeof object.set === 'function' &&\n        typeof object.sort === 'function' &&\n        object[NAME] === 'URLSearchParams');\n};\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n    return (object &&\n        typeof object === 'object' &&\n        typeof object.arrayBuffer === 'function' &&\n        typeof object.type === 'string' &&\n        typeof object.stream === 'function' &&\n        typeof object.constructor === 'function' &&\n        /^(Blob|File)$/.test(object[NAME]));\n};\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n    return (typeof object === 'object' && (object[NAME] === 'AbortSignal' ||\n        object[NAME] === 'EventTarget'));\n};\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n    const orig = new URL(original).hostname;\n    const dest = new URL(destination).hostname;\n    return orig === dest || orig.endsWith(`.${dest}`);\n};\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n    const orig = new URL(original).protocol;\n    const dest = new URL(destination).protocol;\n    return orig === dest;\n};\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\nimport { types } from 'node:util';\nimport http from 'node:http';\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n    http.validateHeaderName :\n    name => {\n        if (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n            const error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n            Object.defineProperty(error, 'code', { value: 'ERR_INVALID_HTTP_TOKEN' });\n            throw error;\n        }\n    };\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n    http.validateHeaderValue :\n    (name, value) => {\n        if (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n            const error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n            Object.defineProperty(error, 'code', { value: 'ERR_INVALID_CHAR' });\n            throw error;\n        }\n    };\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n    /**\n     * Headers class\n     *\n     * @constructor\n     * @param {HeadersInit} [init] - Response headers\n     */\n    constructor(init) {\n        // Validate and normalize init object in [name, value(s)][]\n        /** @type {string[][]} */\n        let result = [];\n        if (init instanceof Headers) {\n            const raw = init.raw();\n            for (const [name, values] of Object.entries(raw)) {\n                result.push(...values.map(value => [name, value]));\n            }\n        }\n        else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n            // No op\n        }\n        else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n            const method = init[Symbol.iterator];\n            // eslint-disable-next-line no-eq-null, eqeqeq\n            if (method == null) {\n                // Record<ByteString, ByteString>\n                result.push(...Object.entries(init));\n            }\n            else {\n                if (typeof method !== 'function') {\n                    throw new TypeError('Header pairs must be iterable');\n                }\n                // Sequence<sequence<ByteString>>\n                // Note: per spec we have to first exhaust the lists then process them\n                result = [...init]\n                    .map(pair => {\n                    if (typeof pair !== 'object' || types.isBoxedPrimitive(pair)) {\n                        throw new TypeError('Each header pair must be an iterable object');\n                    }\n                    return [...pair];\n                }).map(pair => {\n                    if (pair.length !== 2) {\n                        throw new TypeError('Each header pair must be a name/value tuple');\n                    }\n                    return [...pair];\n                });\n            }\n        }\n        else {\n            throw new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n        }\n        // Validate and lowercase\n        result =\n            result.length > 0 ?\n                result.map(([name, value]) => {\n                    validateHeaderName(name);\n                    validateHeaderValue(name, String(value));\n                    return [String(name).toLowerCase(), String(value)];\n                }) :\n                undefined;\n        super(result);\n        // Returning a Proxy that will lowercase key names, validate parameters and sort keys\n        // eslint-disable-next-line no-constructor-return\n        return new Proxy(this, {\n            get(target, p, receiver) {\n                switch (p) {\n                    case 'append':\n                    case 'set':\n                        return (name, value) => {\n                            validateHeaderName(name);\n                            validateHeaderValue(name, String(value));\n                            return URLSearchParams.prototype[p].call(target, String(name).toLowerCase(), String(value));\n                        };\n                    case 'delete':\n                    case 'has':\n                    case 'getAll':\n                        return name => {\n                            validateHeaderName(name);\n                            return URLSearchParams.prototype[p].call(target, String(name).toLowerCase());\n                        };\n                    case 'keys':\n                        return () => {\n                            target.sort();\n                            return new Set(URLSearchParams.prototype.keys.call(target)).keys();\n                        };\n                    default:\n                        return Reflect.get(target, p, receiver);\n                }\n            }\n        });\n        /* c8 ignore next */\n    }\n    get [Symbol.toStringTag]() {\n        return this.constructor.name;\n    }\n    toString() {\n        return Object.prototype.toString.call(this);\n    }\n    get(name) {\n        const values = this.getAll(name);\n        if (values.length === 0) {\n            return null;\n        }\n        let value = values.join(', ');\n        if (/^content-encoding$/i.test(name)) {\n            value = value.toLowerCase();\n        }\n        return value;\n    }\n    forEach(callback, thisArg = undefined) {\n        for (const name of this.keys()) {\n            Reflect.apply(callback, thisArg, [this.get(name), name, this]);\n        }\n    }\n    *values() {\n        for (const name of this.keys()) {\n            yield this.get(name);\n        }\n    }\n    /**\n     * @type {() => IterableIterator<[string, string]>}\n     */\n    *entries() {\n        for (const name of this.keys()) {\n            yield [name, this.get(name)];\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * Node-fetch non-spec method\n     * returning all headers and their values as array\n     * @returns {Record<string, string[]>}\n     */\n    raw() {\n        return [...this.keys()].reduce((result, key) => {\n            result[key] = this.getAll(key);\n            return result;\n        }, {});\n    }\n    /**\n     * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n     */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return [...this.keys()].reduce((result, key) => {\n            const values = this.getAll(key);\n            // Http.request() only supports string as Host header.\n            // This hack makes specifying custom Host header possible.\n            if (key === 'host') {\n                result[key] = values[0];\n            }\n            else {\n                result[key] = values.length > 1 ? values : values[0];\n            }\n            return result;\n        }, {});\n    }\n}\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(Headers.prototype, ['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n    result[property] = { enumerable: true };\n    return result;\n}, {}));\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n    return new Headers(headers\n        // Split into pairs\n        .reduce((result, value, index, array) => {\n        if (index % 2 === 0) {\n            result.push(array.slice(index, index + 2));\n        }\n        return result;\n    }, [])\n        .filter(([name, value]) => {\n        try {\n            validateHeaderName(name);\n            validateHeaderValue(name, String(value));\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }));\n}\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n    return redirectStatus.has(code);\n};\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\nimport Headers from './headers.js';\nimport Body, { clone, extractContentType } from './body.js';\nimport { isRedirect } from './utils/is-redirect.js';\nconst INTERNALS = Symbol('Response internals');\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n    constructor(body = null, options = {}) {\n        super(body, options);\n        // eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n        const status = options.status != null ? options.status : 200;\n        const headers = new Headers(options.headers);\n        if (body !== null && !headers.has('Content-Type')) {\n            const contentType = extractContentType(body, this);\n            if (contentType) {\n                headers.append('Content-Type', contentType);\n            }\n        }\n        this[INTERNALS] = {\n            type: 'default',\n            url: options.url,\n            status,\n            statusText: options.statusText || '',\n            headers,\n            counter: options.counter,\n            highWaterMark: options.highWaterMark\n        };\n    }\n    get type() {\n        return this[INTERNALS].type;\n    }\n    get url() {\n        return this[INTERNALS].url || '';\n    }\n    get status() {\n        return this[INTERNALS].status;\n    }\n    /**\n     * Convenience property representing if the request ended normally\n     */\n    get ok() {\n        return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n    }\n    get redirected() {\n        return this[INTERNALS].counter > 0;\n    }\n    get statusText() {\n        return this[INTERNALS].statusText;\n    }\n    get headers() {\n        return this[INTERNALS].headers;\n    }\n    get highWaterMark() {\n        return this[INTERNALS].highWaterMark;\n    }\n    /**\n     * Clone this response\n     *\n     * @return  Response\n     */\n    clone() {\n        return new Response(clone(this, this.highWaterMark), {\n            type: this.type,\n            url: this.url,\n            status: this.status,\n            statusText: this.statusText,\n            headers: this.headers,\n            ok: this.ok,\n            redirected: this.redirected,\n            size: this.size,\n            highWaterMark: this.highWaterMark\n        });\n    }\n    /**\n     * @param {string} url    The URL that the new response is to originate from.\n     * @param {number} status An optional status code for the response (e.g., 302.)\n     * @returns {Response}    A Response object.\n     */\n    static redirect(url, status = 302) {\n        if (!isRedirect(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        return new Response(null, {\n            headers: {\n                location: new URL(url).toString()\n            },\n            status\n        });\n    }\n    static error() {\n        const response = new Response(null, { status: 0, statusText: '' });\n        response[INTERNALS].type = 'error';\n        return response;\n    }\n    static json(data = undefined, init = {}) {\n        const body = JSON.stringify(data);\n        if (body === undefined) {\n            throw new TypeError('data is not JSON serializable');\n        }\n        const headers = new Headers(init && init.headers);\n        if (!headers.has('content-type')) {\n            headers.set('content-type', 'application/json');\n        }\n        return new Response(body, {\n            ...init,\n            headers\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return 'Response';\n    }\n}\nObject.defineProperties(Response.prototype, {\n    type: { enumerable: true },\n    url: { enumerable: true },\n    status: { enumerable: true },\n    ok: { enumerable: true },\n    redirected: { enumerable: true },\n    statusText: { enumerable: true },\n    headers: { enumerable: true },\n    clone: { enumerable: true }\n});\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\nimport { format as formatUrl } from 'node:url';\nimport { deprecate } from 'node:util';\nimport Headers from './headers.js';\nimport Body, { clone, extractContentType, getTotalBytes } from './body.js';\nimport { isAbortSignal } from './utils/is.js';\nimport { getSearch } from './utils/get-search.js';\nimport { validateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY } from './utils/referrer.js';\nconst INTERNALS = Symbol('Request internals');\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n    return (typeof object === 'object' &&\n        typeof object[INTERNALS] === 'object');\n};\nconst doBadDataWarn = deprecate(() => { }, '.data is not a valid RequestInit property, use .body instead', 'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n    constructor(input, init = {}) {\n        let parsedURL;\n        // Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n        if (isRequest(input)) {\n            parsedURL = new URL(input.url);\n        }\n        else {\n            parsedURL = new URL(input);\n            input = {};\n        }\n        if (parsedURL.username !== '' || parsedURL.password !== '') {\n            throw new TypeError(`${parsedURL} is an url with embedded credentials.`);\n        }\n        let method = init.method || input.method || 'GET';\n        if (/^(delete|get|head|options|post|put)$/i.test(method)) {\n            method = method.toUpperCase();\n        }\n        if (!isRequest(init) && 'data' in init) {\n            doBadDataWarn();\n        }\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        if ((init.body != null || (isRequest(input) && input.body !== null)) &&\n            (method === 'GET' || method === 'HEAD')) {\n            throw new TypeError('Request with GET/HEAD method cannot have body');\n        }\n        const inputBody = init.body ?\n            init.body :\n            (isRequest(input) && input.body !== null ?\n                clone(input) :\n                null);\n        super(inputBody, {\n            size: init.size || input.size || 0\n        });\n        const headers = new Headers(init.headers || input.headers || {});\n        if (inputBody !== null && !headers.has('Content-Type')) {\n            const contentType = extractContentType(inputBody, this);\n            if (contentType) {\n                headers.set('Content-Type', contentType);\n            }\n        }\n        let signal = isRequest(input) ?\n            input.signal :\n            null;\n        if ('signal' in init) {\n            signal = init.signal;\n        }\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        if (signal != null && !isAbortSignal(signal)) {\n            throw new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n        }\n        // §5.4, Request constructor steps, step 15.1\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        let referrer = init.referrer == null ? input.referrer : init.referrer;\n        if (referrer === '') {\n            // §5.4, Request constructor steps, step 15.2\n            referrer = 'no-referrer';\n        }\n        else if (referrer) {\n            // §5.4, Request constructor steps, step 15.3.1, 15.3.2\n            const parsedReferrer = new URL(referrer);\n            // §5.4, Request constructor steps, step 15.3.3, 15.3.4\n            referrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n        }\n        else {\n            referrer = undefined;\n        }\n        this[INTERNALS] = {\n            method,\n            redirect: init.redirect || input.redirect || 'follow',\n            headers,\n            parsedURL,\n            signal,\n            referrer\n        };\n        // Node-fetch-only options\n        this.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n        this.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n        this.counter = init.counter || input.counter || 0;\n        this.agent = init.agent || input.agent;\n        this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n        this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n        // §5.4, Request constructor steps, step 16.\n        // Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n        this.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n    }\n    /** @returns {string} */\n    get method() {\n        return this[INTERNALS].method;\n    }\n    /** @returns {string} */\n    get url() {\n        return formatUrl(this[INTERNALS].parsedURL);\n    }\n    /** @returns {Headers} */\n    get headers() {\n        return this[INTERNALS].headers;\n    }\n    get redirect() {\n        return this[INTERNALS].redirect;\n    }\n    /** @returns {AbortSignal} */\n    get signal() {\n        return this[INTERNALS].signal;\n    }\n    // https://fetch.spec.whatwg.org/#dom-request-referrer\n    get referrer() {\n        if (this[INTERNALS].referrer === 'no-referrer') {\n            return '';\n        }\n        if (this[INTERNALS].referrer === 'client') {\n            return 'about:client';\n        }\n        if (this[INTERNALS].referrer) {\n            return this[INTERNALS].referrer.toString();\n        }\n        return undefined;\n    }\n    get referrerPolicy() {\n        return this[INTERNALS].referrerPolicy;\n    }\n    set referrerPolicy(referrerPolicy) {\n        this[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n    }\n    /**\n     * Clone this request\n     *\n     * @return  Request\n     */\n    clone() {\n        return new Request(this);\n    }\n    get [Symbol.toStringTag]() {\n        return 'Request';\n    }\n}\nObject.defineProperties(Request.prototype, {\n    method: { enumerable: true },\n    url: { enumerable: true },\n    headers: { enumerable: true },\n    redirect: { enumerable: true },\n    clone: { enumerable: true },\n    signal: { enumerable: true },\n    referrer: { enumerable: true },\n    referrerPolicy: { enumerable: true }\n});\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n    const { parsedURL } = request[INTERNALS];\n    const headers = new Headers(request[INTERNALS].headers);\n    // Fetch step 1.3\n    if (!headers.has('Accept')) {\n        headers.set('Accept', '*/*');\n    }\n    // HTTP-network-or-cache fetch steps 2.4-2.7\n    let contentLengthValue = null;\n    if (request.body === null && /^(post|put)$/i.test(request.method)) {\n        contentLengthValue = '0';\n    }\n    if (request.body !== null) {\n        const totalBytes = getTotalBytes(request);\n        // Set Content-Length if totalBytes is a number (that is not NaN)\n        if (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n            contentLengthValue = String(totalBytes);\n        }\n    }\n    if (contentLengthValue) {\n        headers.set('Content-Length', contentLengthValue);\n    }\n    // 4.1. Main fetch, step 2.6\n    // > If request's referrer policy is the empty string, then set request's referrer policy to the\n    // > default referrer policy.\n    if (request.referrerPolicy === '') {\n        request.referrerPolicy = DEFAULT_REFERRER_POLICY;\n    }\n    // 4.1. Main fetch, step 2.7\n    // > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n    // > determine request's referrer.\n    if (request.referrer && request.referrer !== 'no-referrer') {\n        request[INTERNALS].referrer = determineRequestsReferrer(request);\n    }\n    else {\n        request[INTERNALS].referrer = 'no-referrer';\n    }\n    // 4.5. HTTP-network-or-cache fetch, step 6.9\n    // > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n    // >  and isomorphic encoded, to httpRequest's header list.\n    if (request[INTERNALS].referrer instanceof URL) {\n        headers.set('Referer', request.referrer);\n    }\n    // HTTP-network-or-cache fetch step 2.11\n    if (!headers.has('User-Agent')) {\n        headers.set('User-Agent', 'node-fetch');\n    }\n    // HTTP-network-or-cache fetch step 2.15\n    if (request.compress && !headers.has('Accept-Encoding')) {\n        headers.set('Accept-Encoding', 'gzip, deflate, br');\n    }\n    let { agent } = request;\n    if (typeof agent === 'function') {\n        agent = agent(parsedURL);\n    }\n    if (!headers.has('Connection') && !agent) {\n        headers.set('Connection', 'close');\n    }\n    // HTTP-network fetch step 4.2\n    // chunked encoding is handled by Node.js\n    const search = getSearch(parsedURL);\n    // Pass the full URL directly to request(), but overwrite the following\n    // options:\n    const options = {\n        // Overwrite search to retain trailing ? (issue #776)\n        path: parsedURL.pathname + search,\n        // The following options are not expressed in the URL\n        method: request.method,\n        headers: headers[Symbol.for('nodejs.util.inspect.custom')](),\n        insecureHTTPParser: request.insecureHTTPParser,\n        agent\n    };\n    return {\n        /** @type {URL} */\n        parsedURL,\n        options\n    };\n};\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\nexport const getSearch = parsedURL => {\n    if (parsedURL.search) {\n        return parsedURL.search;\n    }\n    const lastOffset = parsedURL.href.length - 1;\n    const hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n    return parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\nimport { isIP } from 'node:net';\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n/**\n * @module utils/referrer\n * @private\n */\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n    // 1. If url is null, return no referrer.\n    if (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n        return 'no-referrer';\n    }\n    url = new URL(url);\n    // 2. If url's scheme is a local scheme, then return no referrer.\n    if (/^(about|blob|data):$/.test(url.protocol)) {\n        return 'no-referrer';\n    }\n    // 3. Set url's username to the empty string.\n    url.username = '';\n    // 4. Set url's password to null.\n    // Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n    url.password = '';\n    // 5. Set url's fragment to null.\n    // Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n    url.hash = '';\n    // 6. If the origin-only flag is true, then:\n    if (originOnly) {\n        // 6.1. Set url's path to null.\n        // Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n        url.pathname = '';\n        // 6.2. Set url's query to null.\n        // Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n        url.search = '';\n    }\n    // 7. Return url.\n    return url;\n}\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n    '',\n    'no-referrer',\n    'no-referrer-when-downgrade',\n    'same-origin',\n    'origin',\n    'strict-origin',\n    'origin-when-cross-origin',\n    'strict-origin-when-cross-origin',\n    'unsafe-url'\n]);\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n    if (!ReferrerPolicy.has(referrerPolicy)) {\n        throw new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n    }\n    return referrerPolicy;\n}\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n    // 1. If origin is an opaque origin, return \"Not Trustworthy\".\n    // Not applicable\n    // 2. Assert: origin is a tuple origin.\n    // Not for implementations\n    // 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n    if (/^(http|ws)s:$/.test(url.protocol)) {\n        return true;\n    }\n    // 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n    const hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n    const hostIPVersion = isIP(hostIp);\n    if (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n        return true;\n    }\n    if (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n        return true;\n    }\n    // 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n    // We are returning FALSE here because we cannot ensure conformance to\n    // let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n    if (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n        return false;\n    }\n    // 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n    if (url.protocol === 'file:') {\n        return true;\n    }\n    // 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n    // Not supported\n    // 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n    // Not supported\n    // 9. Return \"Not Trustworthy\".\n    return false;\n}\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n    // 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n    if (/^about:(blank|srcdoc)$/.test(url)) {\n        return true;\n    }\n    // 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n    if (url.protocol === 'data:') {\n        return true;\n    }\n    // Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n    // created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n    // trustworthy.\n    if (/^(blob|filesystem):$/.test(url.protocol)) {\n        return true;\n    }\n    // 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n    return isOriginPotentiallyTrustworthy(url);\n}\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, { referrerURLCallback, referrerOriginCallback } = {}) {\n    // There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n    // these cases:\n    // > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n    // > Note: If request's referrer policy is the empty string, Fetch will not call into this\n    // > algorithm.\n    if (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n        return null;\n    }\n    // 1. Let policy be request's associated referrer policy.\n    const policy = request.referrerPolicy;\n    // 2. Let environment be request's client.\n    // not applicable to node.js\n    // 3. Switch on request's referrer:\n    if (request.referrer === 'about:client') {\n        return 'no-referrer';\n    }\n    // \"a URL\": Let referrerSource be request's referrer.\n    const referrerSource = request.referrer;\n    // 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n    let referrerURL = stripURLForUseAsAReferrer(referrerSource);\n    // 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n    //    origin-only flag set to true.\n    let referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n    // 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n    //    referrerURL to referrerOrigin.\n    if (referrerURL.toString().length > 4096) {\n        referrerURL = referrerOrigin;\n    }\n    // 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n    //    policy considerations in the interests of minimizing data leakage. For example, the user\n    //    agent could strip the URL down to an origin, modify its host, replace it with an empty\n    //    string, etc.\n    if (referrerURLCallback) {\n        referrerURL = referrerURLCallback(referrerURL);\n    }\n    if (referrerOriginCallback) {\n        referrerOrigin = referrerOriginCallback(referrerOrigin);\n    }\n    // 8.Execute the statements corresponding to the value of policy:\n    const currentURL = new URL(request.url);\n    switch (policy) {\n        case 'no-referrer':\n            return 'no-referrer';\n        case 'origin':\n            return referrerOrigin;\n        case 'unsafe-url':\n            return referrerURL;\n        case 'strict-origin':\n            // 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n            //    potentially trustworthy URL, then return no referrer.\n            if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n                return 'no-referrer';\n            }\n            // 2. Return referrerOrigin.\n            return referrerOrigin.toString();\n        case 'strict-origin-when-cross-origin':\n            // 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n            //    return referrerURL.\n            if (referrerURL.origin === currentURL.origin) {\n                return referrerURL;\n            }\n            // 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n            //    potentially trustworthy URL, then return no referrer.\n            if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n                return 'no-referrer';\n            }\n            // 3. Return referrerOrigin.\n            return referrerOrigin;\n        case 'same-origin':\n            // 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n            //    return referrerURL.\n            if (referrerURL.origin === currentURL.origin) {\n                return referrerURL;\n            }\n            // 2. Return no referrer.\n            return 'no-referrer';\n        case 'origin-when-cross-origin':\n            // 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n            //    return referrerURL.\n            if (referrerURL.origin === currentURL.origin) {\n                return referrerURL;\n            }\n            // Return referrerOrigin.\n            return referrerOrigin;\n        case 'no-referrer-when-downgrade':\n            // 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n            //    potentially trustworthy URL, then return no referrer.\n            if (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n                return 'no-referrer';\n            }\n            // 2. Return referrerURL.\n            return referrerURL;\n        default:\n            throw new TypeError(`Invalid referrerPolicy: ${policy}`);\n    }\n}\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n    // 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n    //    and response’s header list.\n    const policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n    // 2. Let policy be the empty string.\n    let policy = '';\n    // 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n    //    string, then set policy to token.\n    // Note: This algorithm loops over multiple policy values to allow deployment of new policy\n    // values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n    for (const token of policyTokens) {\n        if (token && ReferrerPolicy.has(token)) {\n            policy = token;\n        }\n    }\n    // 4. Return policy.\n    return policy;\n}\n", "// ----------------------------------------------------------------------------\n\n// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:\n// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code\n// EDIT THE CORRESPONDENT .ts FILE INSTEAD\n\nimport { FetchBaseError } from './base.js';\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n    constructor(message, type = 'aborted') {\n        super(message, type);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,gGAAgG,GAAG,mIAAmI;AAAA,QACrP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,oGAAoG,GAAG,mIAAmI;AAAA,QACzP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,oGAAoG,GAAG,mIAAmI;AAAA,QACzP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,gGAAgG,GAAG,mIAAmI;AAAA,QACrP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,8FAA8F,GAAG,mIAAmI;AAAA,QACnP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,8FAA8F,GAAG,mIAAmI;AAAA,QACnP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACEF,IAAAA,oBAAiB;AACjB,wBAAkB;AAClB,uBAAiB;AACjB,IAAAC,sBAAsD;AACtD,IAAAC,sBAAuB;;;ACNvB,yBAAoC;AACpC,uBAA4C;AAC5C,yBAAuB;;;ACPhB,IAAM,iBAAN,cAA6B,MAAM;AAAA,EACtC,YAAY,SAAS,MAAM;AACvB,UAAM,OAAO;AAEb,UAAM,kBAAkB,MAAM,KAAK,WAAW;AAC9C,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA,EACA,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO,KAAK,YAAY;AAAA,EAC5B;AACJ;;;ACNO,IAAM,aAAN,cAAyB,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3C,YAAY,SAAS,MAAM,aAAa;AACpC,UAAM,SAAS,IAAI;AAEnB,QAAI,aAAa;AAEb,WAAK,OAAO,KAAK,QAAQ,YAAY;AACrC,WAAK,iBAAiB,YAAY;AAAA,IACtC;AAAA,EACJ;AACJ;;;ACjBA,IAAM,OAAO,OAAO;AAOb,IAAM,wBAAwB,YAAU;AAC3C,SAAQ,OAAO,WAAW,YACtB,OAAO,OAAO,WAAW,cACzB,OAAO,OAAO,WAAW,cACzB,OAAO,OAAO,QAAQ,cACtB,OAAO,OAAO,WAAW,cACzB,OAAO,OAAO,QAAQ,cACtB,OAAO,OAAO,QAAQ,cACtB,OAAO,OAAO,SAAS,cACvB,OAAO,IAAI,MAAM;AACzB;AAMO,IAAM,SAAS,YAAU;AAC5B,SAAQ,UACJ,OAAO,WAAW,YAClB,OAAO,OAAO,gBAAgB,cAC9B,OAAO,OAAO,SAAS,YACvB,OAAO,OAAO,WAAW,cACzB,OAAO,OAAO,gBAAgB,cAC9B,gBAAgB,KAAK,OAAO,IAAI,CAAC;AACzC;AAMO,IAAM,gBAAgB,YAAU;AACnC,SAAQ,OAAO,WAAW,aAAa,OAAO,IAAI,MAAM,iBACpD,OAAO,IAAI,MAAM;AACzB;AASO,IAAM,sBAAsB,CAAC,aAAa,aAAa;AAC1D,QAAM,OAAO,IAAI,IAAI,QAAQ,EAAE;AAC/B,QAAM,OAAO,IAAI,IAAI,WAAW,EAAE;AAClC,SAAO,SAAS,QAAQ,KAAK,SAAS,IAAI,IAAI,EAAE;AACpD;AAQO,IAAM,iBAAiB,CAAC,aAAa,aAAa;AACrD,QAAM,OAAO,IAAI,IAAI,QAAQ,EAAE;AAC/B,QAAM,OAAO,IAAI,IAAI,WAAW,EAAE;AAClC,SAAO,SAAS;AACpB;;;AHzDA,IAAM,eAAW,4BAAU,mBAAAC,QAAO,QAAQ;AAC1C,IAAM,YAAY,OAAO,gBAAgB;AAUzC,IAAqB,OAArB,MAA0B;AAAA,EACtB,YAAY,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG;AACjC,QAAI,WAAW;AACf,QAAI,SAAS,MAAM;AAEf,aAAO;AAAA,IACX,WACS,sBAAsB,IAAI,GAAG;AAElC,aAAO,0BAAO,KAAK,KAAK,SAAS,CAAC;AAAA,IACtC,WACS,OAAO,IAAI,GAAG;AAAA,IAEvB,WACS,0BAAO,SAAS,IAAI,GAAG;AAAA,IAEhC,WACS,uBAAM,iBAAiB,IAAI,GAAG;AAEnC,aAAO,0BAAO,KAAK,IAAI;AAAA,IAC3B,WACS,YAAY,OAAO,IAAI,GAAG;AAE/B,aAAO,0BAAO,KAAK,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAAA,IACpE,WACS,gBAAgB,mBAAAA,SAAQ;AAAA,IAEjC,OAKK;AAGD,aAAO,0BAAO,KAAK,OAAO,IAAI,CAAC;AAAA,IACnC;AACA,QAAI,SAAS;AACb,QAAI,0BAAO,SAAS,IAAI,GAAG;AACvB,eAAS,mBAAAA,QAAO,SAAS,KAAK,IAAI;AAAA,IACtC,WACS,OAAO,IAAI,GAAG;AACnB,eAAS,mBAAAA,QAAO,SAAS,KAAK,KAAK,OAAO,CAAC;AAAA,IAC/C;AACA,SAAK,SAAS,IAAI;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW;AAAA,MACX,OAAO;AAAA,IACX;AACA,SAAK,OAAO;AACZ,QAAI,gBAAgB,mBAAAA,SAAQ;AACxB,WAAK,GAAG,SAAS,YAAU;AACvB,cAAM,QAAQ,kBAAkB,iBAC5B,SACA,IAAI,WAAW,+CAA+C,KAAK,GAAG,KAAK,OAAO,OAAO,IAAI,UAAU,MAAM;AACjH,aAAK,SAAS,EAAE,QAAQ;AAAA,MAC5B,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,SAAS,EAAE;AAAA,EAC3B;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,SAAS,EAAE;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,cAAc;AAChB,UAAM,EAAE,QAAQ,YAAY,WAAW,IAAI,MAAM,YAAY,IAAI;AACjE,WAAO,OAAO,MAAM,YAAY,aAAa,UAAU;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBA,MAAM,OAAO;AACT,UAAM,KAAM,KAAK,WAAW,KAAK,QAAQ,IAAI,cAAc,KAAO,KAAK,SAAS,EAAE,QAAQ,KAAK,SAAS,EAAE,KAAK,QAAS;AACxH,UAAM,MAAM,MAAM,KAAK,YAAY;AACnC,WAAO,IAAI,KAAK,CAAC,GAAG,GAAG;AAAA,MACnB,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,OAAO;AACT,UAAM,OAAO,MAAM,KAAK,KAAK;AAC7B,WAAO,KAAK,MAAM,IAAI;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,OAAO;AACT,UAAM,SAAS,MAAM,YAAY,IAAI;AACrC,WAAO,IAAI,YAAY,EAAE,OAAO,MAAM;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS;AACL,WAAO,YAAY,IAAI;AAAA,EAC3B;AACJ;AACA,KAAK,UAAU,aAAS,4BAAU,KAAK,UAAU,QAAQ,sEAA0E,mBAAmB;AAEtJ,OAAO,iBAAiB,KAAK,WAAW;AAAA,EACpC,MAAM,EAAE,YAAY,KAAK;AAAA,EACzB,UAAU,EAAE,YAAY,KAAK;AAAA,EAC7B,aAAa,EAAE,YAAY,KAAK;AAAA,EAChC,MAAM,EAAE,YAAY,KAAK;AAAA,EACzB,MAAM,EAAE,YAAY,KAAK;AAAA,EACzB,MAAM,EAAE,YAAY,KAAK;AAAA,EACzB,MAAM,EAAE,SAAK,4BAAU,MAAM;AAAA,EAAE,GAAG,0EAA2E,iEAAiE,EAAE;AACpL,CAAC;AAQD,eAAe,YAAY,MAAM;AAC7B,MAAI,KAAK,SAAS,EAAE,WAAW;AAC3B,UAAM,IAAI,UAAU,0BAA0B,KAAK,GAAG,EAAE;AAAA,EAC5D;AACA,OAAK,SAAS,EAAE,YAAY;AAC5B,MAAI,KAAK,SAAS,EAAE,OAAO;AACvB,UAAM,KAAK,SAAS,EAAE;AAAA,EAC1B;AACA,QAAM,EAAE,KAAK,IAAI;AAEjB,MAAI,SAAS,MAAM;AACf,WAAO,0BAAO,MAAM,CAAC;AAAA,EACzB;AAEA,MAAI,EAAE,gBAAgB,mBAAAA,UAAS;AAC3B,WAAO,0BAAO,MAAM,CAAC;AAAA,EACzB;AAGA,QAAM,QAAQ,CAAC;AACf,MAAI,aAAa;AACjB,MAAI;AACA,qBAAiB,SAAS,MAAM;AAC5B,UAAI,KAAK,OAAO,KAAK,aAAa,MAAM,SAAS,KAAK,MAAM;AACxD,cAAM,QAAQ,IAAI,WAAW,mBAAmB,KAAK,GAAG,gBAAgB,KAAK,IAAI,IAAI,UAAU;AAC/F,aAAK,QAAQ,KAAK;AAClB,cAAM;AAAA,MACV;AACA,oBAAc,MAAM;AACpB,YAAM,KAAK,KAAK;AAAA,IACpB;AAAA,EACJ,SACO,OAAO;AACV,UAAM,SAAS,iBAAiB,iBAAiB,QAAQ,IAAI,WAAW,+CAA+C,KAAK,GAAG,KAAK,MAAM,OAAO,IAAI,UAAU,KAAK;AACpK,UAAM;AAAA,EACV;AACA,MAAI,KAAK,kBAAkB,QAAQ,KAAK,eAAe,UAAU,MAAM;AACnE,QAAI;AACA,UAAI,MAAM,MAAM,OAAK,OAAO,MAAM,QAAQ,GAAG;AACzC,eAAO,0BAAO,KAAK,MAAM,KAAK,EAAE,CAAC;AAAA,MACrC;AACA,aAAO,0BAAO,OAAO,OAAO,UAAU;AAAA,IAC1C,SACO,OAAO;AACV,YAAM,IAAI,WAAW,kDAAkD,KAAK,GAAG,KAAK,MAAM,OAAO,IAAI,UAAU,KAAK;AAAA,IACxH;AAAA,EACJ,OACK;AACD,UAAM,IAAI,WAAW,4DAA4D,KAAK,GAAG,EAAE;AAAA,EAC/F;AACJ;AAQO,IAAM,QAAQ,CAAC,UAAU,kBAAkB;AAC9C,MAAI;AACJ,MAAI;AACJ,MAAI,EAAE,KAAK,IAAI,SAAS,SAAS;AAEjC,MAAI,SAAS,UAAU;AACnB,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACxD;AAGA,MAAK,gBAAgB,mBAAAA,WAAY,OAAO,KAAK,gBAAgB,YAAa;AAEtE,SAAK,IAAI,+BAAY,EAAE,cAAc,CAAC;AACtC,SAAK,IAAI,+BAAY,EAAE,cAAc,CAAC;AACtC,SAAK,KAAK,EAAE;AACZ,SAAK,KAAK,EAAE;AAEZ,aAAS,SAAS,EAAE,SAAS;AAC7B,WAAO;AAAA,EACX;AACA,SAAO;AACX;AACA,IAAM,iCAA6B,4BAAU,UAAQ,KAAK,YAAY,GAAG,6FAA8F,sDAAsD;AAWtN,IAAM,qBAAqB,CAAC,MAAM,YAAY;AAEjD,MAAI,SAAS,MAAM;AACf,WAAO;AAAA,EACX;AAEA,MAAI,OAAO,SAAS,UAAU;AAC1B,WAAO;AAAA,EACX;AAEA,MAAI,sBAAsB,IAAI,GAAG;AAC7B,WAAO;AAAA,EACX;AAEA,MAAI,OAAO,IAAI,GAAG;AACd,WAAO,KAAK,QAAQ;AAAA,EACxB;AAEA,MAAI,0BAAO,SAAS,IAAI,KAAK,uBAAM,iBAAiB,IAAI,KAAK,YAAY,OAAO,IAAI,GAAG;AACnF,WAAO;AAAA,EACX;AAKA,MAAI,QAAQ,OAAO,KAAK,gBAAgB,YAAY;AAChD,WAAO,gCAAgC,2BAA2B,IAAI,CAAC;AAAA,EAC3E;AAEA,MAAI,gBAAgB,mBAAAA,SAAQ;AACxB,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AAUO,IAAM,gBAAgB,aAAW;AACpC,QAAM,EAAE,KAAK,IAAI,QAAQ,SAAS;AAElC,MAAI,SAAS,MAAM;AACf,WAAO;AAAA,EACX;AAEA,MAAI,OAAO,IAAI,GAAG;AACd,WAAO,KAAK;AAAA,EAChB;AAEA,MAAI,0BAAO,SAAS,IAAI,GAAG;AACvB,WAAO,KAAK;AAAA,EAChB;AAEA,MAAI,QAAQ,OAAO,KAAK,kBAAkB,YAAY;AAClD,WAAO,KAAK,kBAAkB,KAAK,eAAe,IAAI,KAAK,cAAc,IAAI;AAAA,EACjF;AAEA,SAAO;AACX;AAQO,IAAM,gBAAgB,OAAO,MAAM,EAAE,KAAK,MAAM;AACnD,MAAI,SAAS,MAAM;AAEf,SAAK,IAAI;AAAA,EACb,OACK;AAED,UAAM,SAAS,MAAM,IAAI;AAAA,EAC7B;AACJ;;;AIrVA,IAAAC,oBAAsB;AACtB,uBAAiB;AAEjB,IAAM,qBAAqB,OAAO,iBAAAC,QAAK,uBAAuB,aAC1D,iBAAAA,QAAK,qBACL,UAAQ;AACJ,MAAI,CAAC,0BAA0B,KAAK,IAAI,GAAG;AACvC,UAAM,QAAQ,IAAI,UAAU,2CAA2C,IAAI,GAAG;AAC9E,WAAO,eAAe,OAAO,QAAQ,EAAE,OAAO,yBAAyB,CAAC;AACxE,UAAM;AAAA,EACV;AACJ;AAEJ,IAAM,sBAAsB,OAAO,iBAAAA,QAAK,wBAAwB,aAC5D,iBAAAA,QAAK,sBACL,CAAC,MAAM,UAAU;AACb,MAAI,kCAAkC,KAAK,KAAK,GAAG;AAC/C,UAAM,QAAQ,IAAI,UAAU,yCAAyC,IAAI,IAAI;AAC7E,WAAO,eAAe,OAAO,QAAQ,EAAE,OAAO,mBAAmB,CAAC;AAClE,UAAM;AAAA,EACV;AACJ;AAYJ,IAAqB,UAArB,MAAqB,iBAAgB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjD,YAAY,MAAM;AAGd,QAAI,SAAS,CAAC;AACd,QAAI,gBAAgB,UAAS;AACzB,YAAM,MAAM,KAAK,IAAI;AACrB,iBAAW,CAAC,MAAM,MAAM,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC9C,eAAO,KAAK,GAAG,OAAO,IAAI,WAAS,CAAC,MAAM,KAAK,CAAC,CAAC;AAAA,MACrD;AAAA,IACJ,WACS,QAAQ,MAAM;AAAA,IAEvB,WACS,OAAO,SAAS,YAAY,CAAC,wBAAM,iBAAiB,IAAI,GAAG;AAChE,YAAM,SAAS,KAAK,OAAO,QAAQ;AAEnC,UAAI,UAAU,MAAM;AAEhB,eAAO,KAAK,GAAG,OAAO,QAAQ,IAAI,CAAC;AAAA,MACvC,OACK;AACD,YAAI,OAAO,WAAW,YAAY;AAC9B,gBAAM,IAAI,UAAU,+BAA+B;AAAA,QACvD;AAGA,iBAAS,CAAC,GAAG,IAAI,EACZ,IAAI,UAAQ;AACb,cAAI,OAAO,SAAS,YAAY,wBAAM,iBAAiB,IAAI,GAAG;AAC1D,kBAAM,IAAI,UAAU,6CAA6C;AAAA,UACrE;AACA,iBAAO,CAAC,GAAG,IAAI;AAAA,QACnB,CAAC,EAAE,IAAI,UAAQ;AACX,cAAI,KAAK,WAAW,GAAG;AACnB,kBAAM,IAAI,UAAU,6CAA6C;AAAA,UACrE;AACA,iBAAO,CAAC,GAAG,IAAI;AAAA,QACnB,CAAC;AAAA,MACL;AAAA,IACJ,OACK;AACD,YAAM,IAAI,UAAU,sIAAyI;AAAA,IACjK;AAEA,aACI,OAAO,SAAS,IACZ,OAAO,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM;AAC1B,yBAAmB,IAAI;AACvB,0BAAoB,MAAM,OAAO,KAAK,CAAC;AACvC,aAAO,CAAC,OAAO,IAAI,EAAE,YAAY,GAAG,OAAO,KAAK,CAAC;AAAA,IACrD,CAAC,IACD;AACR,UAAM,MAAM;AAGZ,WAAO,IAAI,MAAM,MAAM;AAAA,MACnB,IAAI,QAAQ,GAAG,UAAU;AACrB,gBAAQ,GAAG;AAAA,UACP,KAAK;AAAA,UACL,KAAK;AACD,mBAAO,CAAC,MAAM,UAAU;AACpB,iCAAmB,IAAI;AACvB,kCAAoB,MAAM,OAAO,KAAK,CAAC;AACvC,qBAAO,gBAAgB,UAAU,CAAC,EAAE,KAAK,QAAQ,OAAO,IAAI,EAAE,YAAY,GAAG,OAAO,KAAK,CAAC;AAAA,YAC9F;AAAA,UACJ,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,mBAAO,UAAQ;AACX,iCAAmB,IAAI;AACvB,qBAAO,gBAAgB,UAAU,CAAC,EAAE,KAAK,QAAQ,OAAO,IAAI,EAAE,YAAY,CAAC;AAAA,YAC/E;AAAA,UACJ,KAAK;AACD,mBAAO,MAAM;AACT,qBAAO,KAAK;AACZ,qBAAO,IAAI,IAAI,gBAAgB,UAAU,KAAK,KAAK,MAAM,CAAC,EAAE,KAAK;AAAA,YACrE;AAAA,UACJ;AACI,mBAAO,QAAQ,IAAI,QAAQ,GAAG,QAAQ;AAAA,QAC9C;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EAEL;AAAA,EACA,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA,EACA,WAAW;AACP,WAAO,OAAO,UAAU,SAAS,KAAK,IAAI;AAAA,EAC9C;AAAA,EACA,IAAI,MAAM;AACN,UAAM,SAAS,KAAK,OAAO,IAAI;AAC/B,QAAI,OAAO,WAAW,GAAG;AACrB,aAAO;AAAA,IACX;AACA,QAAI,QAAQ,OAAO,KAAK,IAAI;AAC5B,QAAI,sBAAsB,KAAK,IAAI,GAAG;AAClC,cAAQ,MAAM,YAAY;AAAA,IAC9B;AACA,WAAO;AAAA,EACX;AAAA,EACA,QAAQ,UAAU,UAAU,QAAW;AACnC,eAAW,QAAQ,KAAK,KAAK,GAAG;AAC5B,cAAQ,MAAM,UAAU,SAAS,CAAC,KAAK,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC;AAAA,IACjE;AAAA,EACJ;AAAA,EACA,CAAC,SAAS;AACN,eAAW,QAAQ,KAAK,KAAK,GAAG;AAC5B,YAAM,KAAK,IAAI,IAAI;AAAA,IACvB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,CAAC,UAAU;AACP,eAAW,QAAQ,KAAK,KAAK,GAAG;AAC5B,YAAM,CAAC,MAAM,KAAK,IAAI,IAAI,CAAC;AAAA,IAC/B;AAAA,EACJ;AAAA,EACA,CAAC,OAAO,QAAQ,IAAI;AAChB,WAAO,KAAK,QAAQ;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM;AACF,WAAO,CAAC,GAAG,KAAK,KAAK,CAAC,EAAE,OAAO,CAAC,QAAQ,QAAQ;AAC5C,aAAO,GAAG,IAAI,KAAK,OAAO,GAAG;AAC7B,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,CAAC,OAAO,IAAI,4BAA4B,CAAC,IAAI;AACzC,WAAO,CAAC,GAAG,KAAK,KAAK,CAAC,EAAE,OAAO,CAAC,QAAQ,QAAQ;AAC5C,YAAM,SAAS,KAAK,OAAO,GAAG;AAG9B,UAAI,QAAQ,QAAQ;AAChB,eAAO,GAAG,IAAI,OAAO,CAAC;AAAA,MAC1B,OACK;AACD,eAAO,GAAG,IAAI,OAAO,SAAS,IAAI,SAAS,OAAO,CAAC;AAAA,MACvD;AACA,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AAAA,EACT;AACJ;AAKA,OAAO,iBAAiB,QAAQ,WAAW,CAAC,OAAO,WAAW,WAAW,QAAQ,EAAE,OAAO,CAAC,QAAQ,aAAa;AAC5G,SAAO,QAAQ,IAAI,EAAE,YAAY,KAAK;AACtC,SAAO;AACX,GAAG,CAAC,CAAC,CAAC;AAMC,SAAS,eAAe,UAAU,CAAC,GAAG;AACzC,SAAO,IAAI,QAAQ,QAEd,OAAO,CAAC,QAAQ,OAAO,OAAO,UAAU;AACzC,QAAI,QAAQ,MAAM,GAAG;AACjB,aAAO,KAAK,MAAM,MAAM,OAAO,QAAQ,CAAC,CAAC;AAAA,IAC7C;AACA,WAAO;AAAA,EACX,GAAG,CAAC,CAAC,EACA,OAAO,CAAC,CAAC,MAAM,KAAK,MAAM;AAC3B,QAAI;AACA,yBAAmB,IAAI;AACvB,0BAAoB,MAAM,OAAO,KAAK,CAAC;AACvC,aAAO;AAAA,IACX,QACM;AACF,aAAO;AAAA,IACX;AAAA,EACJ,CAAC,CAAC;AACN;;;ACpOA,IAAM,iBAAiB,oBAAI,IAAI,CAAC,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AAOjD,IAAM,aAAa,UAAQ;AAC9B,SAAO,eAAe,IAAI,IAAI;AAClC;;;ACDA,IAAMC,aAAY,OAAO,oBAAoB;AAU7C,IAAqB,WAArB,MAAqB,kBAAiB,KAAK;AAAA,EACvC,YAAY,OAAO,MAAM,UAAU,CAAC,GAAG;AACnC,UAAM,MAAM,OAAO;AAEnB,UAAM,SAAS,QAAQ,UAAU,OAAO,QAAQ,SAAS;AACzD,UAAM,UAAU,IAAI,QAAQ,QAAQ,OAAO;AAC3C,QAAI,SAAS,QAAQ,CAAC,QAAQ,IAAI,cAAc,GAAG;AAC/C,YAAM,cAAc,mBAAmB,MAAM,IAAI;AACjD,UAAI,aAAa;AACb,gBAAQ,OAAO,gBAAgB,WAAW;AAAA,MAC9C;AAAA,IACJ;AACA,SAAKA,UAAS,IAAI;AAAA,MACd,MAAM;AAAA,MACN,KAAK,QAAQ;AAAA,MACb;AAAA,MACA,YAAY,QAAQ,cAAc;AAAA,MAClC;AAAA,MACA,SAAS,QAAQ;AAAA,MACjB,eAAe,QAAQ;AAAA,IAC3B;AAAA,EACJ;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA,EACA,IAAI,MAAM;AACN,WAAO,KAAKA,UAAS,EAAE,OAAO;AAAA,EAClC;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,KAAK;AACL,WAAO,KAAKA,UAAS,EAAE,UAAU,OAAO,KAAKA,UAAS,EAAE,SAAS;AAAA,EACrE;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAKA,UAAS,EAAE,UAAU;AAAA,EACrC;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA,EACA,IAAI,gBAAgB;AAChB,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ;AACJ,WAAO,IAAI,UAAS,MAAM,MAAM,KAAK,aAAa,GAAG;AAAA,MACjD,MAAM,KAAK;AAAA,MACX,KAAK,KAAK;AAAA,MACV,QAAQ,KAAK;AAAA,MACb,YAAY,KAAK;AAAA,MACjB,SAAS,KAAK;AAAA,MACd,IAAI,KAAK;AAAA,MACT,YAAY,KAAK;AAAA,MACjB,MAAM,KAAK;AAAA,MACX,eAAe,KAAK;AAAA,IACxB,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,SAAS,KAAK,SAAS,KAAK;AAC/B,QAAI,CAAC,WAAW,MAAM,GAAG;AACrB,YAAM,IAAI,WAAW,iEAAiE;AAAA,IAC1F;AACA,WAAO,IAAI,UAAS,MAAM;AAAA,MACtB,SAAS;AAAA,QACL,UAAU,IAAI,IAAI,GAAG,EAAE,SAAS;AAAA,MACpC;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,OAAO,QAAQ;AACX,UAAM,WAAW,IAAI,UAAS,MAAM,EAAE,QAAQ,GAAG,YAAY,GAAG,CAAC;AACjE,aAASA,UAAS,EAAE,OAAO;AAC3B,WAAO;AAAA,EACX;AAAA,EACA,OAAO,KAAK,OAAO,QAAW,OAAO,CAAC,GAAG;AACrC,UAAM,OAAO,KAAK,UAAU,IAAI;AAChC,QAAI,SAAS,QAAW;AACpB,YAAM,IAAI,UAAU,+BAA+B;AAAA,IACvD;AACA,UAAM,UAAU,IAAI,QAAQ,QAAQ,KAAK,OAAO;AAChD,QAAI,CAAC,QAAQ,IAAI,cAAc,GAAG;AAC9B,cAAQ,IAAI,gBAAgB,kBAAkB;AAAA,IAClD;AACA,WAAO,IAAI,UAAS,MAAM;AAAA,MACtB,GAAG;AAAA,MACH;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO;AAAA,EACX;AACJ;AACA,OAAO,iBAAiB,SAAS,WAAW;AAAA,EACxC,MAAM,EAAE,YAAY,KAAK;AAAA,EACzB,KAAK,EAAE,YAAY,KAAK;AAAA,EACxB,QAAQ,EAAE,YAAY,KAAK;AAAA,EAC3B,IAAI,EAAE,YAAY,KAAK;AAAA,EACvB,YAAY,EAAE,YAAY,KAAK;AAAA,EAC/B,YAAY,EAAE,YAAY,KAAK;AAAA,EAC/B,SAAS,EAAE,YAAY,KAAK;AAAA,EAC5B,OAAO,EAAE,YAAY,KAAK;AAC9B,CAAC;;;AC9HD,sBAAoC;AACpC,IAAAC,oBAA0B;;;ACRnB,IAAM,YAAY,eAAa;AAClC,MAAI,UAAU,QAAQ;AAClB,WAAO,UAAU;AAAA,EACrB;AACA,QAAM,aAAa,UAAU,KAAK,SAAS;AAC3C,QAAM,OAAO,UAAU,SAAS,UAAU,KAAK,UAAU,MAAM,MAAM,MAAM;AAC3E,SAAO,UAAU,KAAK,aAAa,KAAK,MAAM,MAAM,MAAM,MAAM;AACpE;;;ACPA,sBAAqB;AAcd,SAAS,0BAA0B,KAAK,aAAa,OAAO;AAE/D,MAAI,OAAO,MAAM;AACb,WAAO;AAAA,EACX;AACA,QAAM,IAAI,IAAI,GAAG;AAEjB,MAAI,uBAAuB,KAAK,IAAI,QAAQ,GAAG;AAC3C,WAAO;AAAA,EACX;AAEA,MAAI,WAAW;AAGf,MAAI,WAAW;AAGf,MAAI,OAAO;AAEX,MAAI,YAAY;AAGZ,QAAI,WAAW;AAGf,QAAI,SAAS;AAAA,EACjB;AAEA,SAAO;AACX;AAIO,IAAM,iBAAiB,oBAAI,IAAI;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAIM,IAAM,0BAA0B;AAMhC,SAAS,uBAAuB,gBAAgB;AACnD,MAAI,CAAC,eAAe,IAAI,cAAc,GAAG;AACrC,UAAM,IAAI,UAAU,2BAA2B,cAAc,EAAE;AAAA,EACnE;AACA,SAAO;AACX;AAMO,SAAS,+BAA+B,KAAK;AAMhD,MAAI,gBAAgB,KAAK,IAAI,QAAQ,GAAG;AACpC,WAAO;AAAA,EACX;AAEA,QAAM,SAAS,IAAI,KAAK,QAAQ,eAAe,EAAE;AACjD,QAAM,oBAAgB,sBAAK,MAAM;AACjC,MAAI,kBAAkB,KAAK,SAAS,KAAK,MAAM,GAAG;AAC9C,WAAO;AAAA,EACX;AACA,MAAI,kBAAkB,KAAK,mCAAmC,KAAK,MAAM,GAAG;AACxE,WAAO;AAAA,EACX;AAIA,MAAI,IAAI,SAAS,eAAe,IAAI,KAAK,SAAS,YAAY,GAAG;AAC7D,WAAO;AAAA,EACX;AAEA,MAAI,IAAI,aAAa,SAAS;AAC1B,WAAO;AAAA,EACX;AAMA,SAAO;AACX;AAMO,SAAS,4BAA4B,KAAK;AAE7C,MAAI,yBAAyB,KAAK,GAAG,GAAG;AACpC,WAAO;AAAA,EACX;AAEA,MAAI,IAAI,aAAa,SAAS;AAC1B,WAAO;AAAA,EACX;AAIA,MAAI,uBAAuB,KAAK,IAAI,QAAQ,GAAG;AAC3C,WAAO;AAAA,EACX;AAEA,SAAO,+BAA+B,GAAG;AAC7C;AAuBO,SAAS,0BAA0B,SAAS,EAAE,qBAAqB,uBAAuB,IAAI,CAAC,GAAG;AAMrG,MAAI,QAAQ,aAAa,iBAAiB,QAAQ,mBAAmB,IAAI;AACrE,WAAO;AAAA,EACX;AAEA,QAAM,SAAS,QAAQ;AAIvB,MAAI,QAAQ,aAAa,gBAAgB;AACrC,WAAO;AAAA,EACX;AAEA,QAAM,iBAAiB,QAAQ;AAE/B,MAAI,cAAc,0BAA0B,cAAc;AAG1D,MAAI,iBAAiB,0BAA0B,gBAAgB,IAAI;AAGnE,MAAI,YAAY,SAAS,EAAE,SAAS,MAAM;AACtC,kBAAc;AAAA,EAClB;AAKA,MAAI,qBAAqB;AACrB,kBAAc,oBAAoB,WAAW;AAAA,EACjD;AACA,MAAI,wBAAwB;AACxB,qBAAiB,uBAAuB,cAAc;AAAA,EAC1D;AAEA,QAAM,aAAa,IAAI,IAAI,QAAQ,GAAG;AACtC,UAAQ,QAAQ;AAAA,IACZ,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AAGD,UAAI,4BAA4B,WAAW,KAAK,CAAC,4BAA4B,UAAU,GAAG;AACtF,eAAO;AAAA,MACX;AAEA,aAAO,eAAe,SAAS;AAAA,IACnC,KAAK;AAGD,UAAI,YAAY,WAAW,WAAW,QAAQ;AAC1C,eAAO;AAAA,MACX;AAGA,UAAI,4BAA4B,WAAW,KAAK,CAAC,4BAA4B,UAAU,GAAG;AACtF,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX,KAAK;AAGD,UAAI,YAAY,WAAW,WAAW,QAAQ;AAC1C,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX,KAAK;AAGD,UAAI,YAAY,WAAW,WAAW,QAAQ;AAC1C,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX,KAAK;AAGD,UAAI,4BAA4B,WAAW,KAAK,CAAC,4BAA4B,UAAU,GAAG;AACtF,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AACI,YAAM,IAAI,UAAU,2BAA2B,MAAM,EAAE;AAAA,EAC/D;AACJ;AAMO,SAAS,8BAA8B,SAAS;AAGnD,QAAM,gBAAgB,QAAQ,IAAI,iBAAiB,KAAK,IAAI,MAAM,QAAQ;AAE1E,MAAI,SAAS;AAKb,aAAW,SAAS,cAAc;AAC9B,QAAI,SAAS,eAAe,IAAI,KAAK,GAAG;AACpC,eAAS;AAAA,IACb;AAAA,EACJ;AAEA,SAAO;AACX;;;AFvQA,IAAMC,aAAY,OAAO,mBAAmB;AAO5C,IAAM,YAAY,YAAU;AACxB,SAAQ,OAAO,WAAW,YACtB,OAAO,OAAOA,UAAS,MAAM;AACrC;AACA,IAAM,oBAAgB,6BAAU,MAAM;AAAE,GAAG,gEAAgE,gEAAgE;AAU3K,IAAqB,UAArB,MAAqB,iBAAgB,KAAK;AAAA,EACtC,YAAY,OAAO,OAAO,CAAC,GAAG;AAC1B,QAAI;AAEJ,QAAI,UAAU,KAAK,GAAG;AAClB,kBAAY,IAAI,IAAI,MAAM,GAAG;AAAA,IACjC,OACK;AACD,kBAAY,IAAI,IAAI,KAAK;AACzB,cAAQ,CAAC;AAAA,IACb;AACA,QAAI,UAAU,aAAa,MAAM,UAAU,aAAa,IAAI;AACxD,YAAM,IAAI,UAAU,GAAG,SAAS,uCAAuC;AAAA,IAC3E;AACA,QAAI,SAAS,KAAK,UAAU,MAAM,UAAU;AAC5C,QAAI,wCAAwC,KAAK,MAAM,GAAG;AACtD,eAAS,OAAO,YAAY;AAAA,IAChC;AACA,QAAI,CAAC,UAAU,IAAI,KAAK,UAAU,MAAM;AACpC,oBAAc;AAAA,IAClB;AAEA,SAAK,KAAK,QAAQ,QAAS,UAAU,KAAK,KAAK,MAAM,SAAS,UACzD,WAAW,SAAS,WAAW,SAAS;AACzC,YAAM,IAAI,UAAU,+CAA+C;AAAA,IACvE;AACA,UAAM,YAAY,KAAK,OACnB,KAAK,OACJ,UAAU,KAAK,KAAK,MAAM,SAAS,OAChC,MAAM,KAAK,IACX;AACR,UAAM,WAAW;AAAA,MACb,MAAM,KAAK,QAAQ,MAAM,QAAQ;AAAA,IACrC,CAAC;AACD,UAAM,UAAU,IAAI,QAAQ,KAAK,WAAW,MAAM,WAAW,CAAC,CAAC;AAC/D,QAAI,cAAc,QAAQ,CAAC,QAAQ,IAAI,cAAc,GAAG;AACpD,YAAM,cAAc,mBAAmB,WAAW,IAAI;AACtD,UAAI,aAAa;AACb,gBAAQ,IAAI,gBAAgB,WAAW;AAAA,MAC3C;AAAA,IACJ;AACA,QAAI,SAAS,UAAU,KAAK,IACxB,MAAM,SACN;AACJ,QAAI,YAAY,MAAM;AAClB,eAAS,KAAK;AAAA,IAClB;AAEA,QAAI,UAAU,QAAQ,CAAC,cAAc,MAAM,GAAG;AAC1C,YAAM,IAAI,UAAU,gEAAgE;AAAA,IACxF;AAGA,QAAI,WAAW,KAAK,YAAY,OAAO,MAAM,WAAW,KAAK;AAC7D,QAAI,aAAa,IAAI;AAEjB,iBAAW;AAAA,IACf,WACS,UAAU;AAEf,YAAM,iBAAiB,IAAI,IAAI,QAAQ;AAEvC,iBAAW,wBAAwB,KAAK,cAAc,IAAI,WAAW;AAAA,IACzE,OACK;AACD,iBAAW;AAAA,IACf;AACA,SAAKA,UAAS,IAAI;AAAA,MACd;AAAA,MACA,UAAU,KAAK,YAAY,MAAM,YAAY;AAAA,MAC7C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,SAAK,SAAS,KAAK,WAAW,SAAa,MAAM,WAAW,SAAY,KAAK,MAAM,SAAU,KAAK;AAClG,SAAK,WAAW,KAAK,aAAa,SAAa,MAAM,aAAa,SAAY,OAAO,MAAM,WAAY,KAAK;AAC5G,SAAK,UAAU,KAAK,WAAW,MAAM,WAAW;AAChD,SAAK,QAAQ,KAAK,SAAS,MAAM;AACjC,SAAK,gBAAgB,KAAK,iBAAiB,MAAM,iBAAiB;AAClE,SAAK,qBAAqB,KAAK,sBAAsB,MAAM,sBAAsB;AAGjF,SAAK,iBAAiB,KAAK,kBAAkB,MAAM,kBAAkB;AAAA,EACzE;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA;AAAA,EAEA,IAAI,MAAM;AACN,eAAO,gBAAAC,QAAU,KAAKD,UAAS,EAAE,SAAS;AAAA,EAC9C;AAAA;AAAA,EAEA,IAAI,UAAU;AACV,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA;AAAA,EAEA,IAAI,WAAW;AACX,QAAI,KAAKA,UAAS,EAAE,aAAa,eAAe;AAC5C,aAAO;AAAA,IACX;AACA,QAAI,KAAKA,UAAS,EAAE,aAAa,UAAU;AACvC,aAAO;AAAA,IACX;AACA,QAAI,KAAKA,UAAS,EAAE,UAAU;AAC1B,aAAO,KAAKA,UAAS,EAAE,SAAS,SAAS;AAAA,IAC7C;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,iBAAiB;AACjB,WAAO,KAAKA,UAAS,EAAE;AAAA,EAC3B;AAAA,EACA,IAAI,eAAe,gBAAgB;AAC/B,SAAKA,UAAS,EAAE,iBAAiB,uBAAuB,cAAc;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ;AACJ,WAAO,IAAI,SAAQ,IAAI;AAAA,EAC3B;AAAA,EACA,KAAK,OAAO,WAAW,IAAI;AACvB,WAAO;AAAA,EACX;AACJ;AACA,OAAO,iBAAiB,QAAQ,WAAW;AAAA,EACvC,QAAQ,EAAE,YAAY,KAAK;AAAA,EAC3B,KAAK,EAAE,YAAY,KAAK;AAAA,EACxB,SAAS,EAAE,YAAY,KAAK;AAAA,EAC5B,UAAU,EAAE,YAAY,KAAK;AAAA,EAC7B,OAAO,EAAE,YAAY,KAAK;AAAA,EAC1B,QAAQ,EAAE,YAAY,KAAK;AAAA,EAC3B,UAAU,EAAE,YAAY,KAAK;AAAA,EAC7B,gBAAgB,EAAE,YAAY,KAAK;AACvC,CAAC;AAOM,IAAM,wBAAwB,aAAW;AAC5C,QAAM,EAAE,UAAU,IAAI,QAAQA,UAAS;AACvC,QAAM,UAAU,IAAI,QAAQ,QAAQA,UAAS,EAAE,OAAO;AAEtD,MAAI,CAAC,QAAQ,IAAI,QAAQ,GAAG;AACxB,YAAQ,IAAI,UAAU,KAAK;AAAA,EAC/B;AAEA,MAAI,qBAAqB;AACzB,MAAI,QAAQ,SAAS,QAAQ,gBAAgB,KAAK,QAAQ,MAAM,GAAG;AAC/D,yBAAqB;AAAA,EACzB;AACA,MAAI,QAAQ,SAAS,MAAM;AACvB,UAAM,aAAa,cAAc,OAAO;AAExC,QAAI,OAAO,eAAe,YAAY,CAAC,OAAO,MAAM,UAAU,GAAG;AAC7D,2BAAqB,OAAO,UAAU;AAAA,IAC1C;AAAA,EACJ;AACA,MAAI,oBAAoB;AACpB,YAAQ,IAAI,kBAAkB,kBAAkB;AAAA,EACpD;AAIA,MAAI,QAAQ,mBAAmB,IAAI;AAC/B,YAAQ,iBAAiB;AAAA,EAC7B;AAIA,MAAI,QAAQ,YAAY,QAAQ,aAAa,eAAe;AACxD,YAAQA,UAAS,EAAE,WAAW,0BAA0B,OAAO;AAAA,EACnE,OACK;AACD,YAAQA,UAAS,EAAE,WAAW;AAAA,EAClC;AAIA,MAAI,QAAQA,UAAS,EAAE,oBAAoB,KAAK;AAC5C,YAAQ,IAAI,WAAW,QAAQ,QAAQ;AAAA,EAC3C;AAEA,MAAI,CAAC,QAAQ,IAAI,YAAY,GAAG;AAC5B,YAAQ,IAAI,cAAc,YAAY;AAAA,EAC1C;AAEA,MAAI,QAAQ,YAAY,CAAC,QAAQ,IAAI,iBAAiB,GAAG;AACrD,YAAQ,IAAI,mBAAmB,mBAAmB;AAAA,EACtD;AACA,MAAI,EAAE,MAAM,IAAI;AAChB,MAAI,OAAO,UAAU,YAAY;AAC7B,YAAQ,MAAM,SAAS;AAAA,EAC3B;AACA,MAAI,CAAC,QAAQ,IAAI,YAAY,KAAK,CAAC,OAAO;AACtC,YAAQ,IAAI,cAAc,OAAO;AAAA,EACrC;AAGA,QAAM,SAAS,UAAU,SAAS;AAGlC,QAAM,UAAU;AAAA;AAAA,IAEZ,MAAM,UAAU,WAAW;AAAA;AAAA,IAE3B,QAAQ,QAAQ;AAAA,IAChB,SAAS,QAAQ,OAAO,IAAI,4BAA4B,CAAC,EAAE;AAAA,IAC3D,oBAAoB,QAAQ;AAAA,IAC5B;AAAA,EACJ;AACA,SAAO;AAAA;AAAA,IAEH;AAAA,IACA;AAAA,EACJ;AACJ;;;AGpQO,IAAM,aAAN,cAAyB,eAAe;AAAA,EAC3C,YAAY,SAAS,OAAO,WAAW;AACnC,UAAM,SAAS,IAAI;AAAA,EACvB;AACJ;;;AX0BA,IAAM,mBAAmB,oBAAI,IAAI,CAAC,SAAS,SAAS,QAAQ,CAAC;AAQ7D,eAAO,MAA6B,KAAK,UAAU;AAC/C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEpC,UAAM,UAAU,IAAI,QAAQ,KAAK,QAAQ;AACzC,UAAM,EAAE,WAAW,QAAQ,IAAI,sBAAsB,OAAO;AAC5D,QAAI,CAAC,iBAAiB,IAAI,UAAU,QAAQ,GAAG;AAC3C,YAAM,IAAI,UAAU,0BAA0B,GAAG,iBAAiB,UAAU,SAAS,QAAQ,MAAM,EAAE,CAAC,qBAAqB;AAAA,IAC/H;AAQA,UAAM,QAAQ,UAAU,aAAa,WAAW,kBAAAE,UAAQ,kBAAAC,SAAM;AAC9D,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,WAAW;AACf,UAAM,QAAQ,MAAM;AAChB,YAAM,QAAQ,IAAI,WAAW,4BAA4B;AACzD,aAAO,KAAK;AACZ,UAAI,QAAQ,QAAQ,QAAQ,gBAAgB,oBAAAC,QAAO,UAAU;AACzD,gBAAQ,KAAK,QAAQ,KAAK;AAAA,MAC9B;AACA,UAAI,CAAC,YAAY,CAAC,SAAS,MAAM;AAC7B;AAAA,MACJ;AACA,eAAS,KAAK,KAAK,SAAS,KAAK;AAAA,IACrC;AACA,QAAI,UAAU,OAAO,SAAS;AAC1B,YAAM;AACN;AAAA,IACJ;AACA,UAAM,mBAAmB,MAAM;AAC3B,YAAM;AACN,eAAS;AAAA,IACb;AAEA,UAAM,WAAW,KAAK,UAAU,SAAS,GAAG,OAAO;AACnD,QAAI,QAAQ;AACR,aAAO,iBAAiB,SAAS,gBAAgB;AAAA,IACrD;AACA,UAAM,WAAW,MAAM;AACnB,eAAS,MAAM;AACf,UAAI,QAAQ;AACR,eAAO,oBAAoB,SAAS,gBAAgB;AAAA,MACxD;AAAA,IACJ;AACA,aAAS,GAAG,SAAS,WAAS;AAC1B,aAAO,IAAI,WAAW,cAAc,QAAQ,GAAG,oBAAoB,MAAM,OAAO,IAAI,UAAU,KAAK,CAAC;AACpG,eAAS;AAAA,IACb,CAAC;AACD,wCAAoC,UAAU,WAAS;AACnD,UAAI,YAAY,SAAS,MAAM;AAC3B,iBAAS,KAAK,QAAQ,KAAK;AAAA,MAC/B;AAAA,IACJ,CAAC;AAED,QAAI,QAAQ,UAAU,OAAO;AAGzB,eAAS,GAAG,UAAU,OAAK;AACvB,YAAI;AACJ,UAAE,gBAAgB,OAAO,MAAM;AAC3B,iCAAuB,EAAE;AAAA,QAC7B,CAAC;AACD,UAAE,gBAAgB,SAAS,cAAY;AAEnC,cAAI,YAAY,uBAAuB,EAAE,gBAAgB,CAAC,UAAU;AAChE,kBAAM,QAAQ,IAAI,MAAM,iBAAiB;AACzC,kBAAM,OAAO;AACb,qBAAS,KAAK,KAAK,SAAS,KAAK;AAAA,UACrC;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,aAAS,GAAG,YAAY,eAAa;AACjC,eAAS,WAAW,CAAC;AACrB,YAAM,UAAU,eAAe,UAAU,UAAU;AAEnD,UAAI,WAAW,UAAU,UAAU,GAAG;AAElC,cAAM,WAAW,QAAQ,IAAI,UAAU;AAEvC,YAAI,cAAc;AAClB,YAAI;AACA,wBAAc,aAAa,OAAO,OAAO,IAAI,IAAI,UAAU,QAAQ,GAAG;AAAA,QAC1E,QACM;AAIF,cAAI,QAAQ,aAAa,UAAU;AAC/B,mBAAO,IAAI,WAAW,wDAAwD,QAAQ,IAAI,kBAAkB,CAAC;AAC7G,qBAAS;AACT;AAAA,UACJ;AAAA,QACJ;AAEA,gBAAQ,QAAQ,UAAU;AAAA,UACtB,KAAK;AACD,mBAAO,IAAI,WAAW,0EAA0E,QAAQ,GAAG,IAAI,aAAa,CAAC;AAC7H,qBAAS;AACT;AAAA,UACJ,KAAK;AAED;AAAA,UACJ,KAAK,UAAU;AAEX,gBAAI,gBAAgB,MAAM;AACtB;AAAA,YACJ;AAEA,gBAAI,QAAQ,WAAW,QAAQ,QAAQ;AACnC,qBAAO,IAAI,WAAW,gCAAgC,QAAQ,GAAG,IAAI,cAAc,CAAC;AACpF,uBAAS;AACT;AAAA,YACJ;AAGA,kBAAM,iBAAiB;AAAA,cACnB,SAAS,IAAI,QAAQ,QAAQ,OAAO;AAAA,cACpC,QAAQ,QAAQ;AAAA,cAChB,SAAS,QAAQ,UAAU;AAAA,cAC3B,OAAO,QAAQ;AAAA,cACf,UAAU,QAAQ;AAAA,cAClB,QAAQ,QAAQ;AAAA,cAChB,MAAM,MAAM,OAAO;AAAA,cACnB,QAAQ,QAAQ;AAAA,cAChB,MAAM,QAAQ;AAAA,cACd,UAAU,QAAQ;AAAA,cAClB,gBAAgB,QAAQ;AAAA,YAC5B;AAUA,gBAAI,CAAC,oBAAoB,QAAQ,KAAK,WAAW,KAAK,CAAC,eAAe,QAAQ,KAAK,WAAW,GAAG;AAC7F,yBAAW,QAAQ,CAAC,iBAAiB,oBAAoB,UAAU,SAAS,GAAG;AAC3E,+BAAe,QAAQ,OAAO,IAAI;AAAA,cACtC;AAAA,YACJ;AAEA,gBAAI,UAAU,eAAe,OAAO,QAAQ,QAAQ,SAAS,gBAAgB,oBAAAA,QAAO,UAAU;AAC1F,qBAAO,IAAI,WAAW,4DAA4D,sBAAsB,CAAC;AACzG,uBAAS;AACT;AAAA,YACJ;AAEA,gBAAI,UAAU,eAAe,QAAS,UAAU,eAAe,OAAO,UAAU,eAAe,QAAQ,QAAQ,WAAW,QAAS;AAC/H,6BAAe,SAAS;AACxB,6BAAe,OAAO;AACtB,6BAAe,QAAQ,OAAO,gBAAgB;AAAA,YAClD;AAEA,kBAAM,yBAAyB,8BAA8B,OAAO;AACpE,gBAAI,wBAAwB;AACxB,6BAAe,iBAAiB;AAAA,YACpC;AAEA,oBAAQ,MAAM,IAAI,QAAQ,aAAa,cAAc,CAAC,CAAC;AACvD,qBAAS;AACT;AAAA,UACJ;AAAA,UACA;AACI,mBAAO,OAAO,IAAI,UAAU,oBAAoB,QAAQ,QAAQ,2CAA2C,CAAC;AAAA,QACpH;AAAA,MACJ;AAEA,UAAI,QAAQ;AACR,kBAAU,KAAK,OAAO,MAAM;AACxB,iBAAO,oBAAoB,SAAS,gBAAgB;AAAA,QACxD,CAAC;AAAA,MACL;AACA,UAAI,WAAO,oBAAAC,UAAK,WAAW,IAAI,gCAAY,GAAG,WAAS;AACnD,YAAI,OAAO;AACP,iBAAO,KAAK;AAAA,QAChB;AAAA,MACJ,CAAC;AAGD,UAAI,QAAQ,UAAU,UAAU;AAC5B,kBAAU,GAAG,WAAW,gBAAgB;AAAA,MAC5C;AACA,YAAM,kBAAkB;AAAA,QACpB,KAAK,QAAQ;AAAA,QACb,QAAQ,UAAU;AAAA,QAClB,YAAY,UAAU;AAAA,QACtB;AAAA,QACA,MAAM,QAAQ;AAAA,QACd,SAAS,QAAQ;AAAA,QACjB,eAAe,QAAQ;AAAA,MAC3B;AAEA,YAAM,UAAU,QAAQ,IAAI,kBAAkB;AAQ9C,UAAI,CAAC,QAAQ,YAAY,QAAQ,WAAW,UAAU,YAAY,QAAQ,UAAU,eAAe,OAAO,UAAU,eAAe,KAAK;AACpI,mBAAW,IAAI,SAAS,MAAM,eAAe;AAC7C,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAMA,YAAM,cAAc;AAAA,QAChB,OAAO,iBAAAC,QAAK;AAAA,QACZ,aAAa,iBAAAA,QAAK;AAAA,MACtB;AAEA,UAAI,YAAY,UAAU,YAAY,UAAU;AAC5C,mBAAO,oBAAAD,UAAK,MAAM,iBAAAC,QAAK,aAAa,WAAW,GAAG,WAAS;AACvD,cAAI,OAAO;AACP,mBAAO,KAAK;AAAA,UAChB;AAAA,QACJ,CAAC;AACD,mBAAW,IAAI,SAAS,MAAM,eAAe;AAC7C,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAEA,UAAI,YAAY,aAAa,YAAY,aAAa;AAGlD,cAAM,UAAM,oBAAAD,UAAK,WAAW,IAAI,gCAAY,GAAG,WAAS;AACpD,cAAI,OAAO;AACP,mBAAO,KAAK;AAAA,UAChB;AAAA,QACJ,CAAC;AACD,YAAI,KAAK,QAAQ,WAAS;AAEtB,eAAK,MAAM,CAAC,IAAI,QAAU,GAAM;AAC5B,uBAAO,oBAAAA,UAAK,MAAM,iBAAAC,QAAK,cAAc,GAAG,WAAS;AAC7C,kBAAI,OAAO;AACP,uBAAO,KAAK;AAAA,cAChB;AAAA,YACJ,CAAC;AAAA,UACL,OACK;AACD,uBAAO,oBAAAD,UAAK,MAAM,iBAAAC,QAAK,iBAAiB,GAAG,WAAS;AAChD,kBAAI,OAAO;AACP,uBAAO,KAAK;AAAA,cAChB;AAAA,YACJ,CAAC;AAAA,UACL;AACA,qBAAW,IAAI,SAAS,MAAM,eAAe;AAC7C,kBAAQ,QAAQ;AAAA,QACpB,CAAC;AACD,YAAI,KAAK,OAAO,MAAM;AAGlB,cAAI,CAAC,UAAU;AACX,uBAAW,IAAI,SAAS,MAAM,eAAe;AAC7C,oBAAQ,QAAQ;AAAA,UACpB;AAAA,QACJ,CAAC;AACD;AAAA,MACJ;AAEA,UAAI,YAAY,MAAM;AAClB,mBAAO,oBAAAD,UAAK,MAAM,iBAAAC,QAAK,uBAAuB,GAAG,WAAS;AACtD,cAAI,OAAO;AACP,mBAAO,KAAK;AAAA,UAChB;AAAA,QACJ,CAAC;AACD,mBAAW,IAAI,SAAS,MAAM,eAAe;AAC7C,gBAAQ,QAAQ;AAChB;AAAA,MACJ;AAEA,iBAAW,IAAI,SAAS,MAAM,eAAe;AAC7C,cAAQ,QAAQ;AAAA,IACpB,CAAC;AAED,kBAAc,UAAU,OAAO,EAAE,MAAM,MAAM;AAAA,EACjD,CAAC;AACL;AACA,SAAS,oCAAoC,SAAS,eAAe;AACjE,QAAM,aAAa,2BAAO,KAAK,WAAW;AAC1C,MAAI,oBAAoB;AACxB,MAAI,0BAA0B;AAC9B,MAAI;AACJ,UAAQ,GAAG,YAAY,cAAY;AAC/B,UAAM,EAAE,QAAQ,IAAI;AACpB,wBAAoB,QAAQ,mBAAmB,MAAM,aAAa,CAAC,QAAQ,gBAAgB;AAAA,EAC/F,CAAC;AACD,UAAQ,GAAG,UAAU,YAAU;AAC3B,UAAM,gBAAgB,MAAM;AACxB,UAAI,qBAAqB,CAAC,yBAAyB;AAC/C,cAAM,QAAQ,IAAI,MAAM,iBAAiB;AACzC,cAAM,OAAO;AACb,sBAAc,KAAK;AAAA,MACvB;AAAA,IACJ;AACA,UAAM,SAAS,SAAO;AAClB,gCAA0B,2BAAO,QAAQ,IAAI,MAAM,EAAE,GAAG,UAAU,MAAM;AAExE,UAAI,CAAC,2BAA2B,eAAe;AAC3C,kCAA2B,2BAAO,QAAQ,cAAc,MAAM,EAAE,GAAG,WAAW,MAAM,GAAG,CAAC,CAAC,MAAM,KAC3F,2BAAO,QAAQ,IAAI,MAAM,EAAE,GAAG,WAAW,MAAM,CAAC,CAAC,MAAM;AAAA,MAC/D;AACA,sBAAgB;AAAA,IACpB;AACA,WAAO,gBAAgB,SAAS,aAAa;AAC7C,WAAO,GAAG,QAAQ,MAAM;AACxB,YAAQ,GAAG,SAAS,MAAM;AACtB,aAAO,eAAe,SAAS,aAAa;AAC5C,aAAO,eAAe,QAAQ,MAAM;AAAA,IACxC,CAAC;AAAA,EACL,CAAC;AACL;",
  "names": ["import_node_http", "import_node_stream", "import_node_buffer", "Stream", "import_node_util", "http", "INTERNALS", "import_node_util", "INTERNALS", "formatUrl", "https", "http", "Stream", "pump", "zlib"]
}
